<Page
    x:Class="Files.InstanceTabsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Windows10version1903="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 8)"
    xmlns:contract6Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:Files"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives"
    mc:Ignorable="d">
    <Page.Background>
        <AcrylicBrush
            Windows10version1903:TintLuminosityOpacity="0.9"
            AlwaysUseFallback="{x:Bind local:App.AppSettings.AcrylicEnabled, Mode=OneWay}"
            BackgroundSource="HostBackdrop"
            FallbackColor="{x:Bind local:App.AppSettings.AcrylicTheme.FallbackColor, Mode=OneWay}"
            TintColor="{x:Bind local:App.AppSettings.AcrylicTheme.TintColor, Mode=OneWay}"
            TintOpacity="{x:Bind local:App.AppSettings.AcrylicTheme.TintOpacity, Mode=OneWay}" />
    </Page.Background>

    <Grid
        x:Name="rootGrid"
        Background="Transparent">
        <Grid.Resources>
            <Style x:Key="TabItemStyle" TargetType="muxc:TabViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="muxc:TabViewItem">

                            <Grid
                                x:Name="LayoutRoot"
                                Padding="{TemplateBinding Padding}"
                                Margin="-1,0,0,0">
                                <!-- This item will cover the separator on its left side. -->

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="LeftColumn" Width="0" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition x:Name="RightColumn" Width="0" />
                                </Grid.ColumnDefinitions>

                                <Grid.RenderTransform>
                                    <ScaleTransform x:Name="LayoutRootScale" />
                                </Grid.RenderTransform>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundPointerOver}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}" />
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPointerOver}" />
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewButtonBackgroundActiveTab}" />
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewButtonForegroundActiveTab}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundPressed}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPressed}" />
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewButtonBackgroundActiveTab}" />
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewButtonForegroundActiveTab}" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Selected">
                                            <VisualState.Setters>
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}" />
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundSelected}" />
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewButtonBackgroundActiveTab}" />
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewButtonForegroundActiveTab}" />
                                                <Setter Target="LeftRadiusRender.Visibility" Value="Visible" />
                                                <Setter Target="RightRadiusRender.Visibility" Value="Visible" />
                                                <Setter Target="LayoutRoot.Background" Value="Transparent" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PointerOverSelected">
                                            <VisualState.Setters>
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}" />
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPointerOver}" />
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewButtonBackgroundActiveTab}" />
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewButtonForegroundActiveTab}" />
                                                <Setter Target="LayoutRoot.Background" Value="Transparent" />
                                                <Setter Target="LeftRadiusRender.Visibility" Value="Visible" />
                                                <Setter Target="RightRadiusRender.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PressedSelected">
                                            <VisualState.Setters>
                                                <Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundSelected}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPressed}" />
                                                <Setter Target="CloseButton.Background" Value="{ThemeResource TabViewButtonBackgroundActiveTab}" />
                                                <Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewButtonForegroundActiveTab}" />
                                                <Setter Target="LayoutRoot.Background" Value="Transparent" />
                                                <Setter Target="LeftRadiusRender.Visibility" Value="Visible" />
                                                <Setter Target="RightRadiusRender.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled" />

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}" />
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}" />
                                                <Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewButtonForegroundDisabled}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="DataVirtualizationStates">
                                        <VisualState x:Name="DataAvailable" />

                                        <VisualState x:Name="DataPlaceholder" />
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="ReorderHintStates">
                                        <VisualState x:Name="NoReorderHint" />

                                        <VisualState x:Name="BottomReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation
                                                    Direction="Bottom"
                                                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                                    TargetName="LayoutRoot" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="TopReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation
                                                    Direction="Top"
                                                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                                    TargetName="LayoutRoot" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="RightReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation
                                                    Direction="Right"
                                                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                                    TargetName="LayoutRoot" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="LeftReorderHint">
                                            <Storyboard>
                                                <DragOverThemeAnimation
                                                    Direction="Left"
                                                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                                    TargetName="LayoutRoot" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualStateGroup.Transitions>
                                            <VisualTransition
                                                GeneratedDuration="0:0:0.2"
                                                To="NoReorderHint" />
                                        </VisualStateGroup.Transitions>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="DragStates">
                                        <VisualState x:Name="NotDragging" />

                                        <VisualState x:Name="Dragging">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="LayoutRoot"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="{ThemeResource ListViewItemDragThemeOpacity}"
                                                    Duration="0" />
                                                <DragItemThemeAnimation TargetName="LayoutRoot" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="DraggingTarget" />

                                        <VisualState x:Name="MultipleDraggingPrimary" />

                                        <VisualState x:Name="MultipleDraggingSecondary" />

                                        <VisualState x:Name="DraggedPlaceholder" />

                                        <VisualState x:Name="Reordering">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="LayoutRoot"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="{ThemeResource ListViewItemReorderThemeOpacity}"
                                                    Duration="0:0:0.240" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="ReorderingTarget">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="LayoutRoot"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="{ThemeResource ListViewItemReorderTargetThemeOpacity}"
                                                    Duration="0:0:0.240" />
                                                <DoubleAnimation
                                                    Storyboard.TargetName="LayoutRootScale"
                                                    Storyboard.TargetProperty="ScaleX"
                                                    To="{ThemeResource ListViewItemReorderTargetThemeScale}"
                                                    Duration="0:0:0.240" />
                                                <DoubleAnimation
                                                    Storyboard.TargetName="LayoutRootScale"
                                                    Storyboard.TargetProperty="ScaleY"
                                                    To="{ThemeResource ListViewItemReorderTargetThemeScale}"
                                                    Duration="0:0:0.240" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="MultipleReorderingPrimary" />

                                        <VisualState x:Name="ReorderedPlaceholder">
                                            <Storyboard>
                                                <FadeOutThemeAnimation TargetName="LayoutRoot" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="DragOver">
                                            <Storyboard>
                                                <DropTargetItemThemeAnimation TargetName="LayoutRoot" />
                                            </Storyboard>
                                        </VisualState>

                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging" />
                                        </VisualStateGroup.Transitions>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="IconStates">
                                        <VisualState x:Name="Icon" />
                                        <VisualState x:Name="NoIcon">
                                            <VisualState.Setters>
                                                <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="TabWidthModes">
                                        <VisualState x:Name="StandardWidth" />

                                        <VisualState x:Name="Compact">
                                            <VisualState.Setters>
                                                <Setter Target="IconBox.Margin" Value="0,0,0,0" />
                                                <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                                                <Setter Target="IconColumn.Width" Value="{ThemeResource TabViewItemHeaderIconSize}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="CloseIconStates">
                                        <VisualState x:Name="CloseButtonVisible" />
                                        <VisualState x:Name="CloseButtonCollapsed">
                                            <VisualState.Setters>
                                                <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Path
                                    x:Name="LeftRadiusRender"
                                    x:Load="False"
                                    Grid.Column="0"
                                    Visibility="Collapsed"
                                    VerticalAlignment="Bottom"
                                    Height="{Binding Source={ThemeResource OverlayCornerRadius}, Path=BottomLeft}"
                                    Margin="-4,0,0,0"
                                    Stretch="Uniform"
                                    Fill="{ThemeResource TabViewItemHeaderBackgroundSelected}"
                                    Data="M4 0 L4 4 L0 4 A4,4 90 0 0 4 0 Z" />
                                <Path
                                    x:Name="RightRadiusRender"
                                    x:Load="False"
                                    Grid.Column="2"
                                    Visibility="Collapsed"
                                    VerticalAlignment="Bottom"
                                    Height="{Binding Source={ThemeResource OverlayCornerRadius}, Path=BottomRight}"
                                    Margin="0,0,-4,0"
                                    Stretch="Uniform"
                                    Fill="{ThemeResource TabViewItemHeaderBackgroundSelected}"
                                    Data="M0 0 L0 4 L4 4 A4 4 90 0 1 0 0 Z" />

                                <Border
                                    x:Name="TabSeparator"
                                    HorizontalAlignment="Right"
                                    Width="1"
                                    Grid.Column="1"
                                    BorderBrush="{ThemeResource TabViewItemSeparator}"
                                    BorderThickness="1"
                                    Margin="0,6,0,6" />

                                <Grid
                                    x:Name="TabContainer"
                                    Grid.Column="1"
                                    Background="{ThemeResource TabViewItemHeaderBackground}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Control.IsTemplateFocusTarget="True"
                                    Padding="{ThemeResource TabViewItemHeaderPadding}"
                                    CornerRadius="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource TopCornerRadiusFilterConverter}}"
                                    FocusVisualMargin="{TemplateBinding FocusVisualMargin}">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="IconColumn" Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Viewbox
                                        x:Name="IconBox"
                                        MaxWidth="{ThemeResource TabViewItemHeaderIconSize}"
                                        MaxHeight="{ThemeResource TabViewItemHeaderIconSize}"
                                        Margin="{ThemeResource TabViewItemHeaderIconMargin}">
                                        <ContentControl
                                            x:Name="IconControl"
                                            Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TabViewTemplateSettings.IconElement}"
                                            IsTabStop="False"
                                            Foreground="{ThemeResource TabViewItemIconForeground}"
                                            HighContrastAdjustment="None" />
                                    </Viewbox>

                                    <ContentPresenter
                                        x:Name="ContentPresenter"
                                        Grid.Column="1"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        ContentTransitions="{TemplateBinding ContentTransitions}"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        FontSize="{ThemeResource TabViewItemHeaderFontSize}"
                                        OpticalMarginAlignment="TrimSideBearings"
                                        HighContrastAdjustment="None" />

                                    <Button
                                        x:Name="CloseButton"
                                        Grid.Column="2"
                                        Width="{ThemeResource TabViewItemHeaderCloseButtonSize}"
                                        Height="{ThemeResource TabViewItemHeaderCloseButtonSize}"
                                        FontSize="{ThemeResource TabViewItemHeaderCloseFontSize}"
                                        Margin="{ThemeResource TabViewItemHeaderCloseMargin}"
                                        Content="&#xE711;"
                                        IsTextScaleFactorEnabled="False"
                                        IsTabStop="False"
                                        Background="{ThemeResource TabViewButtonBackground}"
                                        Foreground="{ThemeResource TabViewButtonForeground}"
                                        Style="{StaticResource TabViewCloseButtonStyle}"
                                        HighContrastAdjustment="None" />
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TabViewCloseButtonStyle" TargetType="Button">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FocusVisualMargin" Value="-3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                AutomationProperties.AccessibilityView="Raw"
                                BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Padding="{TemplateBinding Padding}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewButtonBackgroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewButtonForegroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewButtonBackgroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewButtonForegroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewButtonBackgroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewButtonForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </ContentPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DefaultTabViewStyle" TargetType="muxc:TabView">
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Background" Value="{ThemeResource TabViewBackground}" />
                <contract6Present:Setter Property="KeyboardAcceleratorPlacementMode" Value="Hidden" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="muxc:TabView">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Grid
                                    x:Name="TabContainerGrid"
                                    Margin="200,0,0,0"
                                    Background="{TemplateBinding Background}"
                                    XYFocusKeyboardNavigation="Enabled">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="LeftContentColumn" Width="Auto" />
                                        <ColumnDefinition x:Name="TabColumn" Width="Auto" />
                                        <ColumnDefinition x:Name="AddButtonColumn" Width="Auto" />
                                        <ColumnDefinition x:Name="RightContentColumn" Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <ContentPresenter
                                        x:Name="LeftContentPresenter"
                                        Grid.Column="0"
                                        Content="{TemplateBinding TabStripHeader}"
                                        ContentTemplate="{TemplateBinding TabStripHeaderTemplate}" />

                                    <Grid x:Name="ShadowReceiver" Grid.ColumnSpan="4" />

                                    <primitives:TabViewListView
                                        x:Name="TabListView"
                                        Grid.Column="1"
                                        AllowDrop="{TemplateBinding AllowDropTabs}"
                                        CanDragItems="{TemplateBinding CanDragTabs}"
                                        CanReorderItems="{TemplateBinding CanReorderTabs}"
                                        ItemContainerTransitions="{x:Null}"
                                        ItemTemplate="{TemplateBinding TabItemTemplate}"
                                        ItemTemplateSelector="{TemplateBinding TabItemTemplateSelector}"
                                        ItemsSource="{TemplateBinding TabItemsSource}" />

                                    <Button
                                        x:Name="AddButton"
                                        Grid.Column="2"
                                        VerticalAlignment="Stretch"
                                        Command="{TemplateBinding AddTabButtonCommand}"
                                        CommandParameter="{TemplateBinding AddTabButtonCommandParameter}"
                                        Content="&#xE710;"
                                        HighContrastAdjustment="None"
                                        IsTextScaleFactorEnabled="False"
                                        Visibility="{Binding IsAddTabButtonVisible, RelativeSource={RelativeSource TemplatedParent}}" />

                                    <ContentPresenter
                                        x:Name="RightContentPresenter"
                                        Grid.Column="3"
                                        HorizontalAlignment="Stretch"
                                        Content="{TemplateBinding TabStripFooter}"
                                        ContentTemplate="{TemplateBinding TabStripFooterTemplate}" />
                                </Grid>

                                <!--  We don't want this to take space on the second row in case the user isn't using tab content.  -->
                                <Grid
                                    x:Name="ShadowCaster"
                                    Grid.Row="0"
                                    Height="10"
                                    Margin="0,0,0,-10"
                                    VerticalAlignment="Bottom"
                                    Background="Transparent" />

                                <ContentPresenter
                                    x:Name="TabContentPresenter"
                                    Grid.Row="1"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <muxc:TabView
            x:Name="TabStrip"
            VerticalAlignment="Stretch"
            x:FieldModifier="public"
            Background="Transparent"
            IsAddTabButtonVisible="False"
            SelectionChanged="TabStrip_SelectionChanged"
            Style="{StaticResource DefaultTabViewStyle}"
            TabCloseRequested="TabStrip_TabCloseRequested"
            TabWidthMode="Equal">
            <muxc:TabView.Resources>
                <ThemeResource x:Key="TabViewItemHeaderBackgroundSelected" ResourceKey="ApplicationPageBackgroundThemeBrush" />
                <Thickness x:Key="TabViewHeaderPadding">8,8,4,0</Thickness>
            </muxc:TabView.Resources>
            <muxc:TabView.TabStripHeader>
                <Grid
                    x:Name="DragArea2"
                    Width="0"
                    Background="Transparent"
                    Visibility="{x:Bind local:App.InteractionViewModel.LeftMarginLoaded, Mode=OneWay}" />
            </muxc:TabView.TabStripHeader>
            <muxc:TabView.TabStripFooterTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Button
                            x:Name="AddTabButton"
                            x:Uid="TabStripAddNewTab"
                            Width="28"
                            Height="28"
                            Margin="2,7,0,0"
                            Background="Transparent"
                            Click="AddTabButton_Click"
                            ToolTipService.ToolTip="New tab (Ctrl + T)" >
                            <Button.Content>
                                <FontIcon FontSize="10" Glyph="&#xE710;" />
                            </Button.Content>
                            <Button.KeyboardAccelerators>
                                <KeyboardAccelerator Key="T" Modifiers="Control" />
                            </Button.KeyboardAccelerators>
                        </Button>
                        <Grid
                            x:Name="DragArea"
                            Grid.Column="1"
                            MinWidth="375"
                            Background="Transparent"
                            Loaded="DragArea_Loaded" />
                    </Grid>
                </DataTemplate>
            </muxc:TabView.TabStripFooterTemplate>
            <muxc:TabView.KeyboardAccelerators>
                <KeyboardAccelerator
                    Key="Number1"
                    Invoked="NavigateToNumberedTabKeyboardAccelerator_Invoked"
                    Modifiers="Control" />
                <KeyboardAccelerator
                    Key="Number2"
                    Invoked="NavigateToNumberedTabKeyboardAccelerator_Invoked"
                    Modifiers="Control" />
                <KeyboardAccelerator
                    Key="Number3"
                    Invoked="NavigateToNumberedTabKeyboardAccelerator_Invoked"
                    Modifiers="Control" />
                <KeyboardAccelerator
                    Key="Number4"
                    Invoked="NavigateToNumberedTabKeyboardAccelerator_Invoked"
                    Modifiers="Control" />
                <KeyboardAccelerator
                    Key="Number5"
                    Invoked="NavigateToNumberedTabKeyboardAccelerator_Invoked"
                    Modifiers="Control" />
                <KeyboardAccelerator
                    Key="Number6"
                    Invoked="NavigateToNumberedTabKeyboardAccelerator_Invoked"
                    Modifiers="Control" />
                <KeyboardAccelerator
                    Key="Number7"
                    Invoked="NavigateToNumberedTabKeyboardAccelerator_Invoked"
                    Modifiers="Control" />
                <KeyboardAccelerator
                    Key="Number8"
                    Invoked="NavigateToNumberedTabKeyboardAccelerator_Invoked"
                    Modifiers="Control" />
                <KeyboardAccelerator
                    Key="Number9"
                    Invoked="NavigateToNumberedTabKeyboardAccelerator_Invoked"
                    Modifiers="Control" />
                <KeyboardAccelerator
                    Key="W"
                    Invoked="CloseSelectedTabKeyboardAccelerator_Invoked"
                    Modifiers="Control" />
            </muxc:TabView.KeyboardAccelerators>
        </muxc:TabView>
    </Grid>
</Page>