<UserControl
    x:Class="Files.Controls.RibbonArea"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Custom="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:controls="using:Files.Controls"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:Files"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    d:DesignHeight="125"
    d:DesignWidth="1280"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="NavigationButtonNormalStyle" TargetType="Button">
            <Setter Property="Background" Value="{ThemeResource NavigationViewBackButtonBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Height" Value="{ThemeResource NavigationBackButtonHeight}" />
            <Setter Property="Width" Value="{ThemeResource NavigationBackButtonWidth}" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <FontIcon
                                x:Name="Content"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                Glyph="{TemplateBinding Content}"
                                MirroredWhenRightToLeft="True" />

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />

                                    <VisualState x:Name="PointerOver">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Disabled">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TabViewItemHeaderBackgroundSelected" Color="{StaticResource SystemChromeLowColor}" />
        <SolidColorBrush x:Key="TabViewItemHeaderBackgroundPointerOver" Color="{StaticResource SystemChromeLowColor}" />
        <SolidColorBrush x:Key="TabViewItemHeaderBackgroundPressed" Color="{StaticResource SystemChromeLowColor}" />
        <StaticResource x:Key="TabViewSelectionIndicatorForeground" ResourceKey="SystemControlForegroundAccentBrush" />
        <StaticResource x:Key="TabViewItemHeaderForegroundPressed" ResourceKey="SystemControlForegroundBaseMediumHighBrush" />
        <StaticResource x:Key="TabViewItemHeaderForegroundSelected" ResourceKey="SystemControlForegroundBaseHighBrush" />
        <StaticResource x:Key="TabViewItemHeaderForegroundPointerOver" ResourceKey="SystemControlForegroundBaseMediumHighBrush" />
        <StaticResource x:Key="TabViewItemHeaderForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
        <Thickness x:Key="TabViewItemHeaderIconMargin">0,0,0,0</Thickness>
        <Thickness x:Key="TabViewItemHeaderCloseMargin">0,0,0,0</Thickness>
        <x:Double x:Key="TabViewItemHeaderIconSize">0</x:Double>
        <x:Double x:Key="TabViewItemHeaderCloseWidth">0</x:Double>
        <converters:EmptyObjectToObjectConverter
            x:Key="NullVisibilityConverter"
            EmptyValue="Collapsed"
            NotEmptyValue="Visible" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:BoolToObjectConverter
            x:Key="CloseCollapsingSizeConverter"
            FalseValue="{StaticResource TabViewItemHeaderCloseWidth}"
            TrueValue="NaN" />
        <Style x:Key="TabViewItemCloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="6,0,6,0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <x:Double x:Key="TabViewItemHeaderMinHeight">32</x:Double>
        <ControlTemplate x:Key="TabViewItemFluentTemplate" TargetType="Custom:TabViewItem">
            <Grid
                x:Name="LayoutRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Control.IsTemplateFocusTarget="True"
                FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <ScaleTransform x:Name="LayoutRootScale" />
                </Grid.RenderTransform>
                <Grid Height="Auto">
                    <Grid x:Name="ContentPresenterGrid">
                        <Grid.RenderTransform>
                            <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
                        </Grid.RenderTransform>
                        <StackPanel
                            x:Name="TabContent"
                            Width="Auto"
                            Padding="8,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            Orientation="Vertical"
                            Spacing="3">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                HorizontalAlignment="Center"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                FontWeight="{TemplateBinding FontWeight}"
                                OpticalMarginAlignment="None" />
                            <Rectangle
                                x:Name="SelectionIndicator"
                                Height="3"
                                Margin="0,-1,0,-1"
                                HorizontalAlignment="Stretch"
                                Fill="{ThemeResource SystemAccentColor}"
                                Opacity="0"
                                RadiusX="1"
                                RadiusY="1" />
                        </StackPanel>

                    </Grid>
                </Grid>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="PointerOver" />
                        <VisualState x:Name="Pressed">
                            <VisualState.Setters>
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}" />
                                <Setter Target="SelectionIndicator.Opacity" Value="1" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="PointerOverSelected">
                            <VisualState.Setters>
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}" />
                                <Setter Target="TabContent.HorizontalAlignment" Value="Stretch" />
                                <Setter Target="SelectionIndicator.Margin" Value="-7,-1,-7,-1" />

                            </VisualState.Setters>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="SelectionIndicator"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="PressedSelected">
                            <VisualState.Setters>
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
                            </VisualState.Setters>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="SelectionIndicator"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0" />

                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="DisabledStates">
                        <VisualState x:Name="Enabled" />
                        <VisualState x:Name="Disabled">
                            <VisualState.Setters>
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="DataVirtualizationStates">
                        <VisualState x:Name="DataAvailable" />
                        <VisualState x:Name="DataPlaceholder" />
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ReorderHintStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint" />
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="NoReorderHint" />
                        <VisualState x:Name="BottomReorderHint">
                            <Storyboard>
                                <DragOverThemeAnimation
                                    Direction="Bottom"
                                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                    TargetName="LayoutRoot" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="TopReorderHint">
                            <Storyboard>
                                <DragOverThemeAnimation
                                    Direction="Top"
                                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                    TargetName="LayoutRoot" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="RightReorderHint">
                            <Storyboard>
                                <DragOverThemeAnimation
                                    Direction="Right"
                                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                    TargetName="LayoutRoot" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="LeftReorderHint">
                            <Storyboard>
                                <DragOverThemeAnimation
                                    Direction="Left"
                                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                    TargetName="LayoutRoot" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="DragStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging" />
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="NotDragging" />
                        <VisualState x:Name="Dragging">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="LayoutRoot"
                                    Storyboard.TargetProperty="Opacity"
                                    To="{ThemeResource ListViewItemDragThemeOpacity}"
                                    Duration="0" />
                                <DragItemThemeAnimation TargetName="LayoutRoot" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="DraggingTarget" />
                        <VisualState x:Name="MultipleDraggingPrimary" />
                        <VisualState x:Name="MultipleDraggingSecondary" />
                        <VisualState x:Name="DraggedPlaceholder" />
                        <VisualState x:Name="Reordering">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="LayoutRoot"
                                    Storyboard.TargetProperty="Opacity"
                                    To="{ThemeResource ListViewItemReorderThemeOpacity}"
                                    Duration="0:0:0.240" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="ReorderingTarget">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="LayoutRoot"
                                    Storyboard.TargetProperty="Opacity"
                                    To="{ThemeResource ListViewItemReorderTargetThemeOpacity}"
                                    Duration="0:0:0.240" />
                                <DoubleAnimation
                                    Storyboard.TargetName="LayoutRootScale"
                                    Storyboard.TargetProperty="ScaleX"
                                    To="{ThemeResource ListViewItemReorderTargetThemeScale}"
                                    Duration="0:0:0.240" />
                                <DoubleAnimation
                                    Storyboard.TargetName="LayoutRootScale"
                                    Storyboard.TargetProperty="ScaleY"
                                    To="{ThemeResource ListViewItemReorderTargetThemeScale}"
                                    Duration="0:0:0.240" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MultipleReorderingPrimary" />
                        <VisualState x:Name="ReorderedPlaceholder">
                            <Storyboard>
                                <FadeOutThemeAnimation TargetName="LayoutRoot" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="DragOver">
                            <Storyboard>
                                <DropTargetItemThemeAnimation TargetName="LayoutRoot" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </ControlTemplate>
        <StaticResource x:Key="TabViewItemHeaderRevealBorderBrush" ResourceKey="SystemControlBackgroundTransparentRevealBorderBrush" />
        <converters:DoubleToVisibilityConverter x:Key="GreaterThanToleranceVisibilityConverter" GreaterThan="65.0" />
        <Style x:Key="TabViewScrollViewer" TargetType="ScrollViewer">
            <Setter Property="HorizontalScrollMode" Value="Auto" />
            <Setter Property="VerticalScrollMode" Value="Auto" />
            <Setter Property="IsHorizontalRailEnabled" Value="True" />
            <Setter Property="IsVerticalRailEnabled" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="ZoomMode" Value="Disabled" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderThickness" Value="1,0,0,0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Border
                            x:Name="Root"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton
                                    x:Name="ScrollBackButton"
                                    VerticalAlignment="Stretch"
                                    Background="Transparent"
                                    BorderThickness="1"
                                    Content="&#xE76B;"
                                    Delay="50"
                                    FontFamily="Segoe MDL2 Assets"
                                    Interval="100"
                                    Style="{StaticResource RepeatButtonRevealStyle}"
                                    Visibility="{Binding ScrollableWidth, Converter={StaticResource GreaterThanToleranceVisibilityConverter}, FallbackValue=Collapsed, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue=Collapsed}" />
                                <ScrollContentPresenter
                                    x:Name="ScrollContentPresenter"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    TabFocusNavigation="Once" />
                                <RepeatButton
                                    x:Name="ScrollForwardButton"
                                    Grid.Column="2"
                                    VerticalAlignment="Stretch"
                                    Background="Transparent"
                                    BorderThickness="1"
                                    Content="&#xE76C;"
                                    Delay="50"
                                    FontFamily="Segoe MDL2 Assets"
                                    Interval="100"
                                    Style="{StaticResource RepeatButtonRevealStyle}"
                                    Visibility="{Binding ScrollableWidth, Converter={StaticResource GreaterThanToleranceVisibilityConverter}, FallbackValue=Collapsed, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue=Collapsed}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="TabViewTemplate1" TargetType="Custom:TabView">
            <Grid x:Name="TabViewContainer">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition
                        Width="Auto"
                        Custom:TabView.ConstrainColumn="True"
                        Custom:TabView.IgnoreColumn="True" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" Custom:TabView.IgnoreColumn="True" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ContentPresenter
                    Grid.Row="0"
                    Grid.ColumnSpan="6"
                    Content="{TemplateBinding Header}"
                    ContentTemplate="{TemplateBinding HeaderTemplate}" />
                <ContentPresenter
                    Grid.Row="1"
                    Grid.Column="0"
                    Content="{TemplateBinding TabStartHeader}"
                    ContentTemplate="{TemplateBinding TabStartHeaderTemplate}" />
                <ScrollViewer
                    x:Name="ScrollViewer"
                    Grid.Row="1"
                    Grid.Column="1"
                    AutomationProperties.AccessibilityView="Raw"
                    BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                    HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                    IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                    IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                    IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                    IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                    IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                    Style="{StaticResource TabViewScrollViewer}"
                    TabNavigation="{TemplateBinding TabNavigation}"
                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                    VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                    ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                    <ItemsPresenter x:Name="TabsItemsPresenter" Padding="{TemplateBinding Padding}" />
                </ScrollViewer>
                <ContentPresenter
                    Grid.Row="1"
                    Grid.Column="3"
                    HorizontalAlignment="Left"
                    Content="{TemplateBinding TabActionHeader}"
                    ContentTemplate="{TemplateBinding TabActionHeaderTemplate}" />
                <ContentPresenter
                    Grid.Row="1"
                    Grid.Column="5"
                    Content="{TemplateBinding TabEndHeader}"
                    ContentTemplate="{TemplateBinding TabEndHeaderTemplate}" />
                <ContentPresenter
                    x:Name="TabContentPresenter"
                    Grid.Row="2"
                    Grid.ColumnSpan="6"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
                <ContentPresenter
                    Grid.Row="3"
                    Grid.ColumnSpan="6"
                    Content="{TemplateBinding Footer}"
                    ContentTemplate="{TemplateBinding FooterTemplate}" />
            </Grid>
        </ControlTemplate>

        <Style x:Key="TextBoxStyleForPathBar" TargetType="TextBox">
            <Setter Property="Foreground" Value="{ThemeResource DefaultTextForegroundThemeBrush}" />
            <Setter Property="Background" Value="{ThemeResource ApplicationPageBackgroundThemeBrush}" />
            <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}" />
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}" />
            <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}" />
            <Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}" />
            <Setter Property="ContextFlyout" Value="{StaticResource TextControlCommandBarContextFlyout}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.Resources>
                                <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid
                                                    x:Name="ButtonLayoutGrid"
                                                    Background="{ThemeResource TextControlButtonBackground}"
                                                    BorderBrush="{ThemeResource TextControlButtonBorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                    <TextBlock
                                                        x:Name="GlyphElement"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        AutomationProperties.AccessibilityView="Raw"
                                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                        FontSize="12"
                                                        FontStyle="Normal"
                                                        Foreground="Red"
                                                        Text="&#xE10A;" />
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="PointerOver">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation
                                                                        Storyboard.TargetName="ButtonLayoutGrid"
                                                                        Storyboard.TargetProperty="Opacity"
                                                                        To="0"
                                                                        Duration="0" />
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ContentPresenter
                                x:Name="HeaderContentPresenter"
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Margin="{StaticResource TextBoxTopHeaderMargin}"
                                VerticalAlignment="Top"
                                x:DeferLoadStrategy="Lazy"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                FontWeight="Normal"
                                Foreground="{ThemeResource TextControlHeaderForeground}"
                                TextWrapping="Wrap"
                                Visibility="Collapsed" />
                            <Border
                                x:Name="BorderElement"
                                Grid.Row="1"
                                Grid.RowSpan="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                MinWidth="{ThemeResource TextControlThemeMinWidth}"
                                MinHeight="{ThemeResource TextControlThemeMinHeight}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Control.IsTemplateFocusTarget="True"
                                CornerRadius="{TemplateBinding CornerRadius}" />
                            <ScrollViewer
                                x:Name="ContentElement"
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                AutomationProperties.AccessibilityView="Raw"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                IsTabStop="False"
                                IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                ZoomMode="Disabled" />
                            <TextBlock
                                x:Name="PlaceholderTextContentPresenter"
                                Grid.Row="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Margin="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForeground}}"
                                IsHitTestVisible="False"
                                Text="{TemplateBinding PlaceholderText}"
                                TextAlignment="{TemplateBinding TextAlignment}"
                                TextWrapping="{TemplateBinding TextWrapping}" />
                            <Button
                                x:Name="DeleteButton"
                                Grid.Row="1"
                                Grid.Column="1"
                                MinWidth="34"
                                Margin="{ThemeResource HelperButtonThemePadding}"
                                VerticalAlignment="Stretch"
                                AutomationProperties.AccessibilityView="Raw"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                FontSize="{TemplateBinding FontSize}"
                                IsTabStop="False"
                                Style="{StaticResource DeleteButtonStyle}"
                                Visibility="Collapsed" />
                            <ContentPresenter
                                x:Name="DescriptionPresenter"
                                Grid.Row="2"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                x:Load="False"
                                AutomationProperties.AccessibilityView="Raw"
                                Content="{TemplateBinding Description}"
                                Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundDisabled}}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver" />
                                    <VisualState x:Name="Focused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ButtonStates">
                                    <VisualState x:Name="ButtonVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ButtonCollapsed" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Name="TabViewButtonStyle" TargetType="Button">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="Width" Value="24" />
            <Setter Property="Height" Value="24" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Margin" Value="4,0,4,3" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style x:Name="TabViewButtonStyle1" TargetType="Button">
            <Setter Property="Background" Value="{ThemeResource TabViewItemHeaderBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlBackgroundBaseMediumBrush}" />
            <Setter Property="CornerRadius" Value="{Binding Converter={StaticResource TopCornerRadiusFilterConverter}, Source={ThemeResource OverlayCornerRadius}}" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Margin" Value="0,7,0,0" />
            <Setter Property="Padding" Value="10,10,10,11" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw"
                            Background="{TemplateBinding Background}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="SemiLight">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderBackgroundPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderBackgroundPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="TabViewItemsPanel1">
            <StackPanel
                Padding="0,0,0,0"
                Orientation="Horizontal"
                Spacing="0" />
        </ItemsPanelTemplate>

        <Style x:Key="AppBarButtonRevealStyle" TargetType="AppBarButton">
            <Setter Property="Background" Value="{ThemeResource AppBarButtonRevealBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource AppBarButtonForeground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource AppBarButtonRevealBorderThemeThickness}" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="AllowFocusOnInteraction" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="AppBarButton">
                        <Grid
                            x:Name="Root"
                            MinWidth="{TemplateBinding MinWidth}"
                            MaxWidth="{TemplateBinding MaxWidth}"
                            Margin="1,0"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid
                                x:Name="ContentRoot"
                                MinHeight="{ThemeResource AppBarThemeMinHeight}"
                                Margin="-1,0">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Viewbox
                                    x:Name="ContentViewbox"
                                    Height="{ThemeResource AppBarButtonContentHeight}"
                                    Margin="{ThemeResource AppBarButtonContentViewboxCollapsedMargin}"
                                    HorizontalAlignment="Stretch"
                                    AutomationProperties.AccessibilityView="Raw">
                                    <ContentPresenter
                                        x:Name="Content"
                                        Content="{TemplateBinding Icon}"
                                        Foreground="{TemplateBinding Foreground}" />
                                </Viewbox>
                                <TextBlock
                                    x:Name="TextLabel"
                                    Grid.Row="1"
                                    Margin="{ThemeResource AppBarButtonTextLabelMargin}"
                                    AutomationProperties.AccessibilityView="Raw"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="12"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Label}"
                                    TextAlignment="Center"
                                    TextWrapping="Wrap" />
                                <TextBlock
                                    x:Name="OverflowTextLabel"
                                    Margin="12,0,12,0"
                                    Padding="{ThemeResource AppBarButtonOverflowTextLabelPadding}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    AutomationProperties.AccessibilityView="Raw"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="15"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Label}"
                                    TextAlignment="Left"
                                    TextTrimming="Clip"
                                    TextWrapping="NoWrap"
                                    Visibility="Collapsed" />
                                <TextBlock
                                    x:Name="KeyboardAcceleratorTextLabel"
                                    Grid.Column="1"
                                    MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KeyboardAcceleratorTextMinWidth}"
                                    Margin="24,0,12,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    AutomationProperties.AccessibilityView="Raw"
                                    Foreground="{ThemeResource AppBarButtonKeyboardAcceleratorTextForeground}"
                                    Style="{ThemeResource CaptionTextBlockStyle}"
                                    Text="{TemplateBinding KeyboardAcceleratorTextOverride}"
                                    Visibility="Collapsed" />
                                <Border
                                    x:Name="Border"
                                    Grid.RowSpan="2"
                                    Grid.ColumnSpan="2"
                                    Margin="1,0"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}" />

                            </Grid>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ApplicationViewStates">
                                    <VisualState x:Name="FullSize">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonContentViewboxMargin}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="MinHeight">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarThemeCompactHeight}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(Grid.Row)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="TextAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Left" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonTextLabelOnRightMargin}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Compact">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonContentViewboxCompactMargin}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LabelOnRight">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonContentViewboxMargin}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="MinHeight">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarThemeCompactHeight}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(Grid.Row)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="TextAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Left" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonTextLabelOnRightMargin}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LabelCollapsed">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="MinHeight">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarThemeCompactHeight}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonContentViewboxCompactMargin}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Overflow">
                                        <VisualState.Setters>
                                            <Setter Target="ContentRoot.MinHeight" Value="0" />
                                            <Setter Target="ContentViewbox.Visibility" Value="Collapsed" />
                                            <Setter Target="TextLabel.Visibility" Value="Collapsed" />
                                            <Setter Target="OverflowTextLabel.Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="OverflowWithToggleButtons">
                                        <VisualState.Setters>
                                            <Setter Target="ContentRoot.MinHeight" Value="0" />
                                            <Setter Target="ContentViewbox.Visibility" Value="Collapsed" />
                                            <Setter Target="TextLabel.Visibility" Value="Collapsed" />
                                            <Setter Target="OverflowTextLabel.Visibility" Value="Visible" />
                                            <Setter Target="OverflowTextLabel.Margin" Value="38,0,12,0" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="OverflowWithMenuIcons">
                                        <VisualState.Setters>
                                            <Setter Target="ContentRoot.MinHeight" Value="0" />
                                            <Setter Target="ContentViewbox.HorizontalAlignment" Value="Left" />
                                            <Setter Target="ContentViewbox.VerticalAlignment" Value="Center" />
                                            <Setter Target="ContentViewbox.Width" Value="16" />
                                            <Setter Target="ContentViewbox.Height" Value="16" />
                                            <Setter Target="ContentViewbox.Margin" Value="12,0,12,0" />
                                            <Setter Target="TextLabel.Visibility" Value="Collapsed" />
                                            <Setter Target="OverflowTextLabel.Visibility" Value="Visible" />
                                            <Setter Target="OverflowTextLabel.Margin" Value="38,0,12,0" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="OverflowWithToggleButtonsAndMenuIcons">
                                        <VisualState.Setters>
                                            <Setter Target="ContentRoot.MinHeight" Value="0" />
                                            <Setter Target="ContentViewbox.HorizontalAlignment" Value="Left" />
                                            <Setter Target="ContentViewbox.VerticalAlignment" Value="Center" />
                                            <Setter Target="ContentViewbox.Width" Value="16" />
                                            <Setter Target="ContentViewbox.Height" Value="16" />
                                            <Setter Target="ContentViewbox.Margin" Value="38,0,12,0" />
                                            <Setter Target="TextLabel.Visibility" Value="Collapsed" />
                                            <Setter Target="OverflowTextLabel.Visibility" Value="Visible" />
                                            <Setter Target="OverflowTextLabel.Margin" Value="76,0,12,0" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="OverflowTextLabel" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonRevealBackgroundPointerOver}" />
                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrushPointerOver}" />
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="OverflowTextLabel" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonRevealBackgroundPressed}" />
                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrushPressed}" />
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="OverflowTextLabel" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonRevealBackgroundDisabled}" />
                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrushDisabled}" />
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}" />
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}" />
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}" />
                                            <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundDisabled}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="OverflowNormal">

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OverflowPointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonRevealBackgroundPointerOver}" />
                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrushPointerOver}" />
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                            <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundPointerOver}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OverflowPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonRevealBackgroundPressed}" />
                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrushPressed}" />
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                            <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundPressed}" />
                                        </VisualState.Setters>

                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentRoot" />
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>
                                <VisualStateGroup x:Name="InputModeStates">
                                    <VisualState x:Name="InputModeDefault" />
                                    <VisualState x:Name="TouchInputMode">
                                        <VisualState.Setters>
                                            <Setter Target="OverflowTextLabel.Padding" Value="{ThemeResource AppBarButtonOverflowTextTouchMargin}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="GameControllerInputMode">
                                        <VisualState.Setters>
                                            <Setter Target="OverflowTextLabel.Padding" Value="{ThemeResource AppBarButtonOverflowTextTouchMargin}" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>
                                <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                    <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                    <VisualState x:Name="KeyboardAcceleratorTextVisible">
                                        <VisualState.Setters>
                                            <Setter Target="KeyboardAcceleratorTextLabel.Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewItemContainerStyle_NoRevealBorder" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="IsHoldingEnabled" Value="True" />
            <Setter Property="Padding" Value="5,0,0,0" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="8" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="AllowDrop" Value="False" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="FocusVisualMargin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter
                            x:Name="Root"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                            CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                            CheckMode="{ThemeResource ListViewItemCheckMode}"
                            ContentMargin="{TemplateBinding Padding}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            Control.IsTemplateFocusTarget="True"
                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                            DragBackground="{ThemeResource ListViewItemDragBackground}"
                            DragForeground="{ThemeResource ListViewItemDragForeground}"
                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                            FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                            FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                            FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                            PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                            PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
                            PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                            PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                            RevealBackground="{ThemeResource ListViewItemRevealBackground}"
                            RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}"
                            RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}"
                            SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}"
                            SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                            SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
                            SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}"
                            SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Selected" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled" />
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="SystemControlSplitterPointerOver" Color="{ThemeResource SystemBaseLowColor}" />
        <SolidColorBrush x:Key="SystemControlSplitterPressed" Color="{ThemeResource SystemBaseHighColor}" />
        <Style x:Key="GridSplitterStyle_Invisible" TargetType="Custom:GridSplitter">
            <Setter Property="IsTabStop" Value="True" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="IsFocusEngagementEnabled" Value="True" />
            <Setter Property="MinWidth" Value="2" />
            <Setter Property="MinHeight" Value="16" />
            <Setter Property="Background" Value="{ThemeResource SystemControlHighlightChromeHighBrush}" />
            <Setter Property="GripperForeground" Value="{ThemeResource SystemControlForegroundAltHighBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Custom:GridSplitter">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <ContentPresenter
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                Content="{TemplateBinding Element}" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="GridSplitterStates">
                                    <VisualState x:Name="Normal" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid
        x:Name="Ribbon"
        Grid.Row="0"
        Margin="0,0,0,0"
        Background="{ThemeResource RibbonBackgroundColor}">
        <StackPanel
            x:Name="RibbonPanel"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Orientation="Vertical">
            <Grid Height="Auto">
                <Custom:TabView
                    x:Name="RibbonTabView"
                    x:FieldModifier="public"
                    Background="Transparent"
                    ItemsPanel="{StaticResource TabViewItemsPanel1}"
                    TabWidthBehavior="Actual"
                    Template="{StaticResource TabViewTemplate1}">
                    <Custom:TabView.ItemContainerTransitions>
                        <TransitionCollection />
                    </Custom:TabView.ItemContainerTransitions>
                    <Custom:TabViewItem
                        Width="Auto"
                        MinWidth="48"
                        MinHeight="32"
                        BorderThickness="0"
                        Header="File"
                        Tapped="TabViewItem_Tapped"
                        Template="{StaticResource TabViewItemFluentTemplate}">
                        <FlyoutBase.AttachedFlyout>
                            <Flyout Closed="MenuFlyout_Closed">
                                <Flyout.Content>
                                    <ListView SelectionChanged="ListView_SelectionChanged" SelectionMode="Single">
                                        <ListViewItem
                                            x:Name="NewWindowButton"
                                            Padding="12,8"
                                            IsTapEnabled="true"
                                            Tapped="NewWindowButton_Click">
                                            <StackPanel Orientation="Horizontal" Spacing="14">
                                                <FontIcon Glyph="&#xE78B;" />
                                                <StackPanel Orientation="Vertical">
                                                    <TextBlock
                                                        FontSize="14"
                                                        FontWeight="Medium"
                                                        Text="Open new window" />
                                                    <TextBlock Text="Creates a new instance of Files" />
                                                </StackPanel>
                                            </StackPanel>
                                        </ListViewItem>
                                        <ListViewItem
                                            x:Name="SettingsButton"
                                            Padding="12,8"
                                            IsTapEnabled="true"
                                            Tapped="SettingsButton_Click">
                                            <StackPanel Orientation="Horizontal" Spacing="14">
                                                <FontIcon Glyph="&#xE713;" />
                                                <StackPanel Orientation="Vertical">
                                                    <TextBlock
                                                        FontSize="14"
                                                        FontWeight="Medium"
                                                        Text="Settings" />
                                                    <TextBlock Text="Make changes to app preferences" />
                                                </StackPanel>
                                            </StackPanel>
                                        </ListViewItem>
                                        <ListViewItem
                                            x:Name="ExitButton"
                                            Padding="12,8"
                                            IsTapEnabled="true"
                                            Tapped="ExitButton_Click">
                                            <StackPanel Orientation="Horizontal" Spacing="14">
                                                <FontIcon Glyph="&#xE8BB;" />
                                                <StackPanel Orientation="Vertical">
                                                    <TextBlock
                                                        FontSize="14"
                                                        FontWeight="Medium"
                                                        Text="Close Files" />
                                                    <TextBlock Text="Closes this window" />
                                                </StackPanel>
                                            </StackPanel>
                                        </ListViewItem>
                                    </ListView>
                                </Flyout.Content>

                            </Flyout>
                        </FlyoutBase.AttachedFlyout>
                    </Custom:TabViewItem>
                    <Custom:TabViewItem
                        x:Name="HomeRibbonItem"
                        Width="Auto"
                        MinWidth="48"
                        MinHeight="32"
                        BorderThickness="0"
                        DoubleTapped="RibbonItem_DoubleTapped"
                        Header="Home"
                        IsSelected="True"
                        Template="{StaticResource TabViewItemFluentTemplate}">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Tapped">
                                <core:InvokeCommandAction Command="{x:Bind RibbonViewModel.ShowRibbonCommand}" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <Custom:TabViewItem.Resources>
                            <ResourceDictionary Source="ms-appx:///Microsoft.UI.Xaml/DensityStyles/Compact.xaml" />
                        </Custom:TabViewItem.Resources>
                        <controls:RibbonPage Visibility="{x:Bind local:App.AppSettings.ShowRibbonContent, Mode=OneWay}">
                            <controls:RibbonPage.PageContent>
                                <AppBarButton
                                    x:Name="CutButton"
                                    MinWidth="40"
                                    Click="{x:Bind parentPage.instanceInteraction.CutItem_Click}"
                                    CornerRadius="2"
                                    Icon="Cut"
                                    IsEnabled="{x:Bind parentPage.HomeItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Label="Cut"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}" />
                                <AppBarButton
                                    x:Name="CopyButton"
                                    MinWidth="40"
                                    Click="{x:Bind parentPage.instanceInteraction.CopyItem_ClickAsync}"
                                    CornerRadius="2"
                                    Icon="Copy"
                                    IsEnabled="{x:Bind parentPage.HomeItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Label="Copy"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}" />
                                <AppBarButton
                                    x:Name="PasteButton"
                                    MinWidth="40"
                                    x:FieldModifier="public"
                                    Click="{x:Bind parentPage.instanceInteraction.PasteItem_ClickAsync}"
                                    CornerRadius="2"
                                    Icon="Paste"
                                    IsEnabled="{x:Bind local:App.PS.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Label="Paste"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}" />
                                <AppBarButton
                                    x:Name="CopyPathButton"
                                    MinWidth="40"
                                    Click="{x:Bind parentPage.instanceInteraction.GetPath_Click}"
                                    CornerRadius="2"
                                    IsEnabled="{x:Bind parentPage.AlwaysPresentCommands.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Label="Copy Path"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}">
                                    <AppBarButton.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xF271;" />
                                    </AppBarButton.Icon>
                                </AppBarButton>
                                <AppBarSeparator
                                    Height="40"
                                    IsCompact="True"
                                    Visibility="{x:Bind RibbonViewModel.AppBarSeparatorVisibility, Mode=OneWay}" />
                                <AppBarButton
                                    x:Name="DeleteButton"
                                    MinWidth="40"
                                    Click="{x:Bind parentPage.instanceInteraction.DeleteItem_Click}"
                                    CornerRadius="2"
                                    Icon="Delete"
                                    IsEnabled="{x:Bind parentPage.HomeItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Label="Delete"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}" />
                                <AppBarButton
                                    x:Name="RenameButton"
                                    MinWidth="40"
                                    Click="{x:Bind parentPage.instanceInteraction.RenameItem_Click}"
                                    CornerRadius="2"
                                    Icon="Rename"
                                    IsEnabled="{x:Bind parentPage.HomeItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Label="Rename"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}" />
                                <AppBarButton
                                    x:Name="addItemButton"
                                    MinWidth="40"
                                    Click="AddItem_Click"
                                    CornerRadius="2"
                                    Icon="Add"
                                    IsEnabled="{x:Bind parentPage.AlwaysPresentCommands.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Label="New"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}" />
                                <AppBarSeparator
                                    Height="40"
                                    IsCompact="True"
                                    Visibility="{x:Bind RibbonViewModel.AppBarSeparatorVisibility, Mode=OneWay}" />
                                <AppBarButton
                                    x:Name="ShowPropertiesButton"
                                    MinWidth="40"
                                    Click="ShowPropertiesButton_Click"
                                    CornerRadius="2"
                                    IsEnabled="{x:Bind parentPage.HomeItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Label="Properties"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}">
                                    <AppBarButton.Icon>
                                        <FontIcon Glyph="&#xE946;" />
                                    </AppBarButton.Icon>
                                </AppBarButton>
                                <AppBarButton
                                    x:Name="OpenWithButton"
                                    MinWidth="40"
                                    Click="{x:Bind parentPage.instanceInteraction.OpenItem_Click}"
                                    CornerRadius="2"
                                    Icon="OpenWith"
                                    IsEnabled="{x:Bind parentPage.HomeItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Label="Open With"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}" />
                                <AppBarSeparator
                                    Height="40"
                                    IsCompact="True"
                                    Visibility="{x:Bind RibbonViewModel.AppBarSeparatorVisibility, Mode=OneWay}" />
                                <AppBarButton
                                    x:Name="ShowFolderPropertiesButton"
                                    MinWidth="40"
                                    Click="{x:Bind parentPage.instanceInteraction.ShowFolderPropertiesButton_Click}"
                                    CornerRadius="2"
                                    IsEnabled="{x:Bind parentPage.AlwaysPresentCommands.isEnabled, Mode=OneWay}"
                                    Label="Folder Properties"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}">
                                    <AppBarButton.Icon>
                                        <FontIcon Glyph="&#xF12B;" />
                                    </AppBarButton.Icon>
                                </AppBarButton>
                            </controls:RibbonPage.PageContent>
                        </controls:RibbonPage>
                    </Custom:TabViewItem>
                    <Custom:TabViewItem
                        Width="Auto"
                        MinWidth="48"
                        MinHeight="32"
                        BorderThickness="0"
                        DoubleTapped="RibbonItem_DoubleTapped"
                        Header="Share"
                        IsDoubleTapEnabled="True"
                        Template="{StaticResource TabViewItemFluentTemplate}">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Tapped">
                                <core:InvokeCommandAction Command="{x:Bind RibbonViewModel.ShowRibbonCommand}" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <Custom:TabViewItem.Resources>
                            <ResourceDictionary Source="ms-appx:///Microsoft.UI.Xaml/DensityStyles/Compact.xaml" />
                        </Custom:TabViewItem.Resources>
                        <controls:RibbonPage Visibility="{x:Bind local:App.AppSettings.ShowRibbonContent, Mode=OneWay}">
                            <controls:RibbonPage.PageContent>
                                <AppBarButton
                                    x:Name="ShareButton"
                                    MinWidth="40"
                                    Click="{x:Bind parentPage.instanceInteraction.ShareItem_Click}"
                                    CornerRadius="2"
                                    Icon="Share"
                                    IsEnabled="{x:Bind parentPage.ShareItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Label="Share"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}" />
                            </controls:RibbonPage.PageContent>
                        </controls:RibbonPage>
                    </Custom:TabViewItem>
                    <Custom:TabViewItem
                        Width="Auto"
                        MinWidth="48"
                        MinHeight="32"
                        BorderThickness="0"
                        DoubleTapped="RibbonItem_DoubleTapped"
                        Header="View"
                        IsDoubleTapEnabled="True"
                        Template="{StaticResource TabViewItemFluentTemplate}">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Tapped">
                                <core:InvokeCommandAction Command="{x:Bind RibbonViewModel.ShowRibbonCommand}" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <Custom:TabViewItem.Resources>
                            <ResourceDictionary Source="ms-appx:///Microsoft.UI.Xaml/DensityStyles/Compact.xaml" />
                        </Custom:TabViewItem.Resources>
                        <controls:RibbonPage Visibility="{x:Bind local:App.AppSettings.ShowRibbonContent, Mode=OneWay}">
                            <controls:RibbonPage.PageContent>
                                <AppBarButton
                                    x:Name="LayoutButton"
                                    MinWidth="40"
                                    Click="LayoutButton_Click"
                                    CornerRadius="2"
                                    IsEnabled="{x:Bind parentPage.LayoutItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Label="Layout Mode"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}">
                                    <AppBarButton.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xF0E2;" />
                                    </AppBarButton.Icon>
                                </AppBarButton>
                                <AppBarButton
                                    x:Name="SelectAllButton"
                                    MinWidth="40"
                                    Click="{x:Bind parentPage.instanceInteraction.SelectAllItems}"
                                    CornerRadius="2"
                                    Icon="SelectAll"
                                    IsEnabled="{x:Bind parentPage.LayoutItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Label="Select All"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}" />
                                <AppBarButton
                                    x:Name="ClearAllButton"
                                    MinWidth="40"
                                    Click="{x:Bind parentPage.instanceInteraction.ClearAllItems}"
                                    CornerRadius="2"
                                    Icon="ClearSelection"
                                    IsEnabled="{x:Bind parentPage.LayoutItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Label="Clear All"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}" />
                                <AppBarSeparator
                                    Height="40"
                                    IsCompact="True"
                                    Visibility="{x:Bind RibbonViewModel.AppBarSeparatorVisibility, Mode=OneWay}" />
                                <AppBarButton
                                    MinWidth="40"
                                    CornerRadius="2"
                                    Icon="Sort"
                                    IsEnabled="{x:Bind parentPage.LayoutItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Label="Sort by"
                                    LabelPosition="{x:Bind RibbonViewModel.ItemLabelPosition, Mode=OneWay}"
                                    Style="{StaticResource AppBarButtonRevealStyle}">
                                    <AppBarButton.Flyout>
                                        <MenuFlyout Placement="BottomEdgeAlignedLeft">
                                            <muxc:RadioMenuFlyoutItem
                                                GroupName="SortGroup"
                                                IsChecked="{x:Bind parentPage.instanceViewModel.IsSortedByName, Mode=TwoWay}"
                                                Text="Name" />
                                            <muxc:RadioMenuFlyoutItem
                                                GroupName="SortGroup"
                                                IsChecked="{x:Bind parentPage.instanceViewModel.IsSortedByDate, Mode=TwoWay}"
                                                Text="Date modified" />
                                            <muxc:RadioMenuFlyoutItem
                                                GroupName="SortGroup"
                                                IsChecked="{x:Bind parentPage.instanceViewModel.IsSortedByType, Mode=TwoWay}"
                                                Text="Type" />
                                            <muxc:RadioMenuFlyoutItem
                                                GroupName="SortGroup"
                                                IsChecked="{x:Bind parentPage.instanceViewModel.IsSortedBySize, Mode=TwoWay}"
                                                Text="Size" />
                                            <MenuFlyoutSeparator />
                                            <muxc:RadioMenuFlyoutItem
                                                GroupName="SortOrderGroup"
                                                IsChecked="{x:Bind parentPage.instanceViewModel.IsSortedAscending, Mode=TwoWay}"
                                                Text="Ascending" />
                                            <muxc:RadioMenuFlyoutItem
                                                GroupName="SortOrderGroup"
                                                IsChecked="{x:Bind parentPage.instanceViewModel.IsSortedDescending, Mode=TwoWay}"
                                                Text="Descending" />
                                        </MenuFlyout>
                                    </AppBarButton.Flyout>
                                </AppBarButton>
                            </controls:RibbonPage.PageContent>
                        </controls:RibbonPage>
                    </Custom:TabViewItem>
                    <Custom:TabViewItem
                        x:Name="SearchTools"
                        Width="Auto"
                        MinWidth="48"
                        MinHeight="32"
                        BorderThickness="0"
                        DoubleTapped="RibbonItem_DoubleTapped"
                        Header="Search"
                        IsDoubleTapEnabled="True"
                        Template="{StaticResource TabViewItemFluentTemplate}"
                        Visibility="Collapsed">
                        <Custom:TabViewItem.Resources>
                            <ResourceDictionary Source="ms-appx:///Microsoft.UI.Xaml/DensityStyles/Compact.xaml" />
                        </Custom:TabViewItem.Resources>
                        <Custom:TabViewItem.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#FFD9D7D2" />
                                <GradientStop Offset="1.25" Color="Transparent" />
                            </LinearGradientBrush>
                        </Custom:TabViewItem.Background>
                        <controls:RibbonPage>
                            <controls:RibbonPage.PageContent>
                                <StackPanel Orientation="Vertical" Spacing="2.5">
                                    <StackPanel Orientation="Horizontal" Spacing="5">
                                        <RadioButton Content="Current folder" />
                                        <RadioButton Content="All subfolders" />
                                    </StackPanel>
                                    <TextBlock Text="Search within" TextAlignment="Center" />
                                </StackPanel>
                                <AppBarSeparator Visibility="{x:Bind RibbonViewModel.AppBarSeparatorVisibility, Mode=OneWay}" />
                                <StackPanel Orientation="Vertical" Spacing="2.5">
                                    <StackPanel Orientation="Horizontal" Spacing="5">
                                        <ComboBox
                                            Width="135"
                                            MaxDropDownHeight="250"
                                            PlaceholderText="Date modified">
                                            <ComboBox.Items>
                                                <ComboBoxItem Content="Today" />
                                                <ComboBoxItem Content="Yesterday" />
                                                <ComboBoxItem Content="This week" />
                                                <ComboBoxItem Content="Last week" />
                                                <ComboBoxItem Content="This month" />
                                                <ComboBoxItem Content="Last month" />
                                                <ComboBoxItem Content="This year" />
                                                <ComboBoxItem Content="Last year" />
                                            </ComboBox.Items>
                                        </ComboBox>
                                        <ComboBox
                                            Width="135"
                                            MaxDropDownHeight="250"
                                            PlaceholderText="Type">
                                            <ComboBox.Items>
                                                <ComboBoxItem Content="Document" />
                                                <ComboBoxItem Content="Folder" />
                                                <ComboBoxItem Content="Movie" />
                                                <ComboBoxItem Content="Music" />
                                                <ComboBoxItem Content="Note" />
                                                <ComboBoxItem Content="Picture" />
                                                <ComboBoxItem Content="Video" />
                                                <ComboBoxItem Content="Custom" />
                                            </ComboBox.Items>
                                        </ComboBox>
                                        <ComboBox
                                            Width="135"
                                            MaxDropDownHeight="250"
                                            PlaceholderText="Size">
                                            <ComboBox.Items>
                                                <ComboBoxItem Content="Empty" />
                                                <ComboBoxItem Content="Tiny (0 - 16 KB)" />
                                                <ComboBoxItem Content="Small (16 KB - 1 MB)" />
                                                <ComboBoxItem Content="Medium (1 - 128 MB)" />
                                                <ComboBoxItem Content="Large (128 MB - 1 GB)" />
                                                <ComboBoxItem Content="Huge (1 - 4 GB)" />
                                                <ComboBoxItem Content="Gigantic (&gt;4 GB)" />
                                            </ComboBox.Items>
                                        </ComboBox>
                                    </StackPanel>
                                    <TextBlock Text="Filter" TextAlignment="Center" />
                                </StackPanel>
                                <AppBarSeparator Visibility="{x:Bind RibbonViewModel.AppBarSeparatorVisibility, Mode=OneWay}" />
                                <Button
                                    Width="125"
                                    Background="Transparent"
                                    BorderThickness="1"
                                    Style="{ThemeResource ButtonRevealStyle}">
                                    <Button.Content>
                                        <StackPanel Orientation="Vertical">
                                            <FontIcon Glyph="&#xE8BB;" />
                                            <TextBlock Text="Cancel search" TextWrapping="WrapWholeWords" />
                                        </StackPanel>
                                    </Button.Content>
                                </Button>
                            </controls:RibbonPage.PageContent>
                        </controls:RibbonPage>
                    </Custom:TabViewItem>
                </Custom:TabView>
                <Button
                    x:Name="ToggleRibbon"
                    Grid.Column="1"
                    Width="35"
                    Height="25"
                    Margin="0,4,4,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="Transparent"
                    Command="{x:Bind RibbonViewModel.ToggleRibbon}"
                    Content="{x:Bind RibbonViewModel.ToggleRibbonIcon, Mode=OneWay}"
                    CornerRadius="2"
                    FontFamily="Segoe MDL2 Assets"
                    Style="{StaticResource ToolBarButtonStyle}" />
            </Grid>

            <Grid
                x:Name="ToolbarGrid"
                Padding="0,4,0,0"
                VerticalAlignment="Stretch"
                ColumnSpacing="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition MinWidth="285" MaxWidth="485" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <Button
                        x:Name="Back"
                        Width="34"
                        Height="30"
                        Margin="4,0,2,0"
                        x:FieldModifier="public"
                        Background="Transparent"
                        Click="{x:Bind local:NavigationActions.Back_Click}"
                        CornerRadius="2"
                        FontFamily="Segoe MDL2 Assets"
                        IsEnabled="{x:Bind parentPage.ItemDisplayFrame.CanGoBack, Mode=OneWay}"
                        Style="{StaticResource ToolBarButtonStyle}">
                        <Button.Content>
                            &#xE72B;
                        </Button.Content>
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="XButton1" />
                            <KeyboardAccelerator Key="Back" />
                        </Button.KeyboardAccelerators>
                    </Button>

                    <Button
                        x:Name="Forward"
                        Width="34"
                        Height="30"
                        Margin="2,0,2,0"
                        x:FieldModifier="public"
                        Background="Transparent"
                        Click="{x:Bind local:NavigationActions.Forward_Click}"
                        CornerRadius="2"
                        FontFamily="Segoe MDL2 Assets"
                        IsEnabled="{x:Bind parentPage.ItemDisplayFrame.CanGoForward, Mode=OneWay}"
                        Style="{StaticResource ToolBarButtonStyle}">
                        <Button.Content>
                            &#xE72A;
                        </Button.Content>
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="XButton2" />
                        </Button.KeyboardAccelerators>
                    </Button>

                    <Button
                        x:Name="Up"
                        Width="34"
                        Height="30"
                        Margin="2,0,2,0"
                        x:FieldModifier="public"
                        Background="Transparent"
                        Click="{x:Bind local:NavigationActions.Up_Click}"
                        CornerRadius="2"
                        FontFamily="Segoe MDL2 Assets"
                        Style="{StaticResource ToolBarButtonStyle}"
                        Visibility="Visible">
                        <Button.Content>
                            &#xE74A;
                        </Button.Content>
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="Up" Modifiers="Menu" />
                        </Button.KeyboardAccelerators>
                    </Button>

                    <Button
                        x:Name="Refresh"
                        Width="34"
                        Height="30"
                        Margin="2,0,0,0"
                        x:FieldModifier="public"
                        Background="Transparent"
                        Click="{x:Bind local:NavigationActions.Refresh_Click}"
                        CornerRadius="2"
                        FontFamily="Segoe MDL2 Assets"
                        Style="{StaticResource ToolBarButtonStyle}">
                        <Button.Content>
                            &#xE72C;
                        </Button.Content>
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="F5" />
                        </Button.KeyboardAccelerators>
                    </Button>
                </StackPanel>
                <Grid
                    Grid.Column="1"
                    Padding="5,0,5,0"
                    VerticalAlignment="Center">
                    <TextBox
                        x:Name="VisiblePath"
                        Padding="4"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        x:FieldModifier="public"
                        BorderBrush="{ThemeResource CustomInputFieldBorderBrush}"
                        FocusDisengaged="VisiblePath_LostFocus"
                        FontFamily="Segoe UI"
                        FontSize="14"
                        FontWeight="SemiBold"
                        KeyDown="VisiblePath_TextChanged"
                        LostFocus="VisiblePath_LostFocus"
                        PlaceholderText="Enter a path"
                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                        ScrollViewer.VerticalScrollBarVisibility="Hidden"
                        Text="{x:Bind parentPage.PathText.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="Collapsed" />
                    <Grid
                        x:Name="ClickablePath"
                        Height="32.5"
                        Padding="2.5,0,0,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        BorderBrush="{ThemeResource TextBoxBorderThemeBrush}"
                        BorderThickness="1"
                        CornerRadius="2"
                        PointerPressed="ManualPathEntryItem_Click">
                        <Grid.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem
                                    x:Name="ManualPathEntryItem"
                                    Click="ManualPathEntryItem_Click"
                                    Icon="Edit"
                                    Text="Edit address" />
                            </MenuFlyout>
                        </Grid.ContextFlyout>
                        <ListView
                            x:Name="PathViewInteract"
                            Margin="0"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            Background="{ThemeResource TextControlBackground}"
                            CanReorderItems="False"
                            IsItemClickEnabled="True"
                            ItemClick="PathViewInteract_ItemClick"
                            ItemContainerStyle="{StaticResource ListViewItemContainerStyle_NoRevealBorder}"
                            ItemsSource="{x:Bind parentPage.pathBoxItems}"
                            ScrollViewer.HorizontalScrollBarVisibility="Auto"
                            ScrollViewer.HorizontalScrollMode="Enabled"
                            ScrollViewer.VerticalScrollBarVisibility="Disabled"
                            ScrollViewer.VerticalScrollMode="Disabled"
                            SelectionChanged="ClickablePathView_SelectionChanged"
                            SelectionMode="None">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid
                                        x:Name="ListViewItemContentGrid"
                                        Background="Transparent"
                                        Tag="{Binding Path}">
                                        <StackPanel Orientation="Horizontal" Spacing="5">
                                            <TextBlock
                                                Margin="0,0,0,4"
                                                FontSize="14"
                                                FontWeight="Medium"
                                                Text="{Binding Title}" />
                                            <FontIcon FontSize="8" Glyph="&#xE76C;" />
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Background="Transparent" Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <!--<ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Padding" Value="5,0,0,0"/>
                                    <Setter Property="MinHeight" Value="20"/>
                                    <Setter Property="MinWidth" Value="8"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                            </ListView.ItemContainerStyle>-->
                        </ListView>
                    </Grid>
                </Grid>
                <Custom:GridSplitter
                    x:Name="SearchBoxResizer"
                    Grid.Column="1"
                    Width="4"
                    MinWidth="4"
                    HorizontalAlignment="Right"
                    Background="Transparent"
                    Element="{x:Null}"
                    GripperCursor="SizeWestEast"
                    GripperForeground="Transparent"
                    ResizeBehavior="CurrentAndNext"
                    ResizeDirection="Columns"
                    Style="{StaticResource GridSplitterStyle_Invisible}" />
                <AutoSuggestBox
                    x:Name="SearchReigon"
                    Grid.Column="2"
                    MaxWidth="485"
                    Margin="0,0,4,0"
                    VerticalAlignment="Center"
                    PlaceholderText="Search"
                    QueryIcon="Find">
                    <AutoSuggestBox.Resources>
                        <StaticResource x:Key="TextControlBorderBrush" ResourceKey="TextBoxBorderThemeBrush" />
                        <StaticResource x:Key="TextControlBorderBrushPointerOver" ResourceKey="TextBoxBorderThemeBrush" />
                    </AutoSuggestBox.Resources>
                    <AutoSuggestBox.KeyboardAccelerators>
                        <KeyboardAccelerator
                            Key="F"
                            Invoked="KeyboardAccelerator_Invoked"
                            Modifiers="Control" />
                    </AutoSuggestBox.KeyboardAccelerators>
                </AutoSuggestBox>
            </Grid>
        </StackPanel>
    </Grid>

    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
            <!--  VisualState to be triggered when window width is between 0 - 800 effective pixels.  -->
            <VisualState>
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="0" />
                </VisualState.StateTriggers>
                <VisualState.Setters>
                    <Setter Target="SearchReigon.Visibility" Value="Collapsed" />
                </VisualState.Setters>
            </VisualState>
            <!--  VisualState to be triggered when window width is >=800 effective pixels.  -->
            <VisualState>
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="800" />
                </VisualState.StateTriggers>
                <VisualState.Setters>
                    <Setter Target="SearchReigon.Visibility" Value="Visible" />
                </VisualState.Setters>
            </VisualState>
        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
</UserControl>
