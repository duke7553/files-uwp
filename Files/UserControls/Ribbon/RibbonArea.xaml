<UserControl
    x:Class="Files.Controls.RibbonArea"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Custom="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:controls="using:Files.Controls"
    xmlns:controls1="using:Files.UserControls"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:Files"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:ribbon="using:Files.UserControls.Ribbon"
    d:DesignHeight="125"
    d:DesignWidth="1280"
    mc:Ignorable="d">
    <UserControl.Resources>


        <SolidColorBrush x:Key="TabViewItemHeaderBackgroundSelected" Color="{StaticResource SystemChromeLowColor}" />
        <SolidColorBrush x:Key="TabViewItemHeaderBackgroundPointerOver" Color="{StaticResource SystemChromeLowColor}" />
        <SolidColorBrush x:Key="TabViewItemHeaderBackgroundPressed" Color="{StaticResource SystemChromeLowColor}" />
        <StaticResource x:Key="TabViewSelectionIndicatorForeground" ResourceKey="SystemControlForegroundAccentBrush" />
        <StaticResource x:Key="TabViewItemHeaderForegroundPressed" ResourceKey="SystemControlForegroundBaseMediumHighBrush" />
        <StaticResource x:Key="TabViewItemHeaderForegroundSelected" ResourceKey="SystemControlForegroundBaseHighBrush" />
        <StaticResource x:Key="TabViewItemHeaderForegroundPointerOver" ResourceKey="SystemControlForegroundBaseMediumHighBrush" />
        <StaticResource x:Key="TabViewItemHeaderForegroundDisabled" ResourceKey="SystemControlDisabledBaseMediumLowBrush" />
        <Thickness x:Key="TabViewItemHeaderIconMargin">0,0,0,0</Thickness>
        <Thickness x:Key="TabViewItemHeaderCloseMargin">0,0,0,0</Thickness>
        <x:Double x:Key="TabViewItemHeaderIconSize">0</x:Double>
        <x:Double x:Key="TabViewItemHeaderCloseWidth">0</x:Double>
        <converters:EmptyObjectToObjectConverter
            x:Key="NullVisibilityConverter"
            EmptyValue="Collapsed"
            NotEmptyValue="Visible" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:BoolToObjectConverter
            x:Key="CloseCollapsingSizeConverter"
            FalseValue="{StaticResource TabViewItemHeaderCloseWidth}"
            TrueValue="NaN" />
        <Style x:Key="TabViewItemCloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="6,0,6,0" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPointerOverForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <x:Double x:Key="TabViewItemHeaderMinHeight">32</x:Double>
        <ControlTemplate x:Key="TabViewItemFluentTemplate" TargetType="Custom:TabViewItem">
            <Grid
                x:Name="LayoutRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Control.IsTemplateFocusTarget="True"
                FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <ScaleTransform x:Name="LayoutRootScale" />
                </Grid.RenderTransform>
                <Grid Height="Auto">
                    <Grid x:Name="ContentPresenterGrid">
                        <Grid.RenderTransform>
                            <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
                        </Grid.RenderTransform>
                        <StackPanel
                            x:Name="TabContent"
                            Width="Auto"
                            Padding="8,0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            Orientation="Vertical"
                            Spacing="3">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                HorizontalAlignment="Center"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                FontWeight="{TemplateBinding FontWeight}"
                                OpticalMarginAlignment="None" />
                            <Rectangle
                                x:Name="SelectionIndicator"
                                Height="3"
                                Margin="0,-1,0,-1"
                                HorizontalAlignment="Stretch"
                                Fill="{ThemeResource SystemAccentColor}"
                                Opacity="0"
                                RadiusX="1"
                                RadiusY="1" />
                        </StackPanel>

                    </Grid>
                </Grid>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="PointerOver" />
                        <VisualState x:Name="Pressed">
                            <VisualState.Setters>
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}" />
                                <Setter Target="SelectionIndicator.Opacity" Value="1" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="PointerOverSelected">
                            <VisualState.Setters>
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}" />
                                <Setter Target="TabContent.HorizontalAlignment" Value="Stretch" />
                                <Setter Target="SelectionIndicator.Margin" Value="-7,-1,-7,-1" />

                            </VisualState.Setters>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="SelectionIndicator"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="PressedSelected">
                            <VisualState.Setters>
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
                            </VisualState.Setters>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="SelectionIndicator"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0" />

                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="DisabledStates">
                        <VisualState x:Name="Enabled" />
                        <VisualState x:Name="Disabled">
                            <VisualState.Setters>
                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="DataVirtualizationStates">
                        <VisualState x:Name="DataAvailable" />
                        <VisualState x:Name="DataPlaceholder" />
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="ReorderHintStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint" />
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="NoReorderHint" />
                        <VisualState x:Name="BottomReorderHint">
                            <Storyboard>
                                <DragOverThemeAnimation
                                    Direction="Bottom"
                                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                    TargetName="LayoutRoot" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="TopReorderHint">
                            <Storyboard>
                                <DragOverThemeAnimation
                                    Direction="Top"
                                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                    TargetName="LayoutRoot" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="RightReorderHint">
                            <Storyboard>
                                <DragOverThemeAnimation
                                    Direction="Right"
                                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                    TargetName="LayoutRoot" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="LeftReorderHint">
                            <Storyboard>
                                <DragOverThemeAnimation
                                    Direction="Left"
                                    ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                    TargetName="LayoutRoot" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="DragStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging" />
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="NotDragging" />
                        <VisualState x:Name="Dragging">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="LayoutRoot"
                                    Storyboard.TargetProperty="Opacity"
                                    To="{ThemeResource ListViewItemDragThemeOpacity}"
                                    Duration="0" />
                                <DragItemThemeAnimation TargetName="LayoutRoot" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="DraggingTarget" />
                        <VisualState x:Name="MultipleDraggingPrimary" />
                        <VisualState x:Name="MultipleDraggingSecondary" />
                        <VisualState x:Name="DraggedPlaceholder" />
                        <VisualState x:Name="Reordering">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="LayoutRoot"
                                    Storyboard.TargetProperty="Opacity"
                                    To="{ThemeResource ListViewItemReorderThemeOpacity}"
                                    Duration="0:0:0.240" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="ReorderingTarget">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="LayoutRoot"
                                    Storyboard.TargetProperty="Opacity"
                                    To="{ThemeResource ListViewItemReorderTargetThemeOpacity}"
                                    Duration="0:0:0.240" />
                                <DoubleAnimation
                                    Storyboard.TargetName="LayoutRootScale"
                                    Storyboard.TargetProperty="ScaleX"
                                    To="{ThemeResource ListViewItemReorderTargetThemeScale}"
                                    Duration="0:0:0.240" />
                                <DoubleAnimation
                                    Storyboard.TargetName="LayoutRootScale"
                                    Storyboard.TargetProperty="ScaleY"
                                    To="{ThemeResource ListViewItemReorderTargetThemeScale}"
                                    Duration="0:0:0.240" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MultipleReorderingPrimary" />
                        <VisualState x:Name="ReorderedPlaceholder">
                            <Storyboard>
                                <FadeOutThemeAnimation TargetName="LayoutRoot" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="DragOver">
                            <Storyboard>
                                <DropTargetItemThemeAnimation TargetName="LayoutRoot" />
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </ControlTemplate>
        <StaticResource x:Key="TabViewItemHeaderRevealBorderBrush" ResourceKey="SystemControlBackgroundTransparentRevealBorderBrush" />
        <converters:DoubleToVisibilityConverter x:Key="GreaterThanToleranceVisibilityConverter" GreaterThan="65.0" />
        <Style x:Key="TabViewScrollViewer" TargetType="ScrollViewer">
            <Setter Property="HorizontalScrollMode" Value="Auto" />
            <Setter Property="VerticalScrollMode" Value="Auto" />
            <Setter Property="IsHorizontalRailEnabled" Value="True" />
            <Setter Property="IsVerticalRailEnabled" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="ZoomMode" Value="Disabled" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderThickness" Value="1,0,0,0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Border
                            x:Name="Root"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton
                                    x:Name="ScrollBackButton"
                                    VerticalAlignment="Stretch"
                                    Background="Transparent"
                                    BorderThickness="1"
                                    Content="&#xE76B;"
                                    Delay="50"
                                    FontFamily="Segoe MDL2 Assets"
                                    Interval="100"
                                    Style="{StaticResource RepeatButtonRevealStyle}"
                                    Visibility="{Binding ScrollableWidth, Converter={StaticResource GreaterThanToleranceVisibilityConverter}, FallbackValue=Collapsed, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue=Collapsed}" />
                                <ScrollContentPresenter
                                    x:Name="ScrollContentPresenter"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    TabFocusNavigation="Once" />
                                <RepeatButton
                                    x:Name="ScrollForwardButton"
                                    Grid.Column="2"
                                    VerticalAlignment="Stretch"
                                    Background="Transparent"
                                    BorderThickness="1"
                                    Content="&#xE76C;"
                                    Delay="50"
                                    FontFamily="Segoe MDL2 Assets"
                                    Interval="100"
                                    Style="{StaticResource RepeatButtonRevealStyle}"
                                    Visibility="{Binding ScrollableWidth, Converter={StaticResource GreaterThanToleranceVisibilityConverter}, FallbackValue=Collapsed, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue=Collapsed}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="TabViewTemplate1" TargetType="Custom:TabView">
            <Grid x:Name="TabViewContainer">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition
                        Width="Auto"
                        Custom:TabView.ConstrainColumn="True"
                        Custom:TabView.IgnoreColumn="True" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" Custom:TabView.IgnoreColumn="True" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ContentPresenter
                    Grid.Row="0"
                    Grid.ColumnSpan="6"
                    Content="{TemplateBinding Header}"
                    ContentTemplate="{TemplateBinding HeaderTemplate}" />
                <ContentPresenter
                    Grid.Row="1"
                    Grid.Column="0"
                    Content="{TemplateBinding TabStartHeader}"
                    ContentTemplate="{TemplateBinding TabStartHeaderTemplate}" />
                <ScrollViewer
                    x:Name="ScrollViewer"
                    Grid.Row="1"
                    Grid.Column="1"
                    AutomationProperties.AccessibilityView="Raw"
                    BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                    HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                    IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                    IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                    IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                    IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                    IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                    Style="{StaticResource TabViewScrollViewer}"
                    TabNavigation="{TemplateBinding TabNavigation}"
                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                    VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                    ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                    <ItemsPresenter x:Name="TabsItemsPresenter" Padding="{TemplateBinding Padding}" />
                </ScrollViewer>
                <ContentPresenter
                    Grid.Row="1"
                    Grid.Column="3"
                    HorizontalAlignment="Left"
                    Content="{TemplateBinding TabActionHeader}"
                    ContentTemplate="{TemplateBinding TabActionHeaderTemplate}" />
                <ContentPresenter
                    Grid.Row="1"
                    Grid.Column="5"
                    Content="{TemplateBinding TabEndHeader}"
                    ContentTemplate="{TemplateBinding TabEndHeaderTemplate}" />
                <ContentPresenter
                    x:Name="TabContentPresenter"
                    Grid.Row="2"
                    Grid.ColumnSpan="6"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
                <ContentPresenter
                    Grid.Row="3"
                    Grid.ColumnSpan="6"
                    Content="{TemplateBinding Footer}"
                    ContentTemplate="{TemplateBinding FooterTemplate}" />
            </Grid>
        </ControlTemplate>


        <Style x:Name="TabViewButtonStyle" TargetType="Button">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="Width" Value="24" />
            <Setter Property="Height" Value="24" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Margin" Value="4,0,4,3" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
        <Style x:Name="TabViewButtonStyle1" TargetType="Button">
            <Setter Property="Background" Value="{ThemeResource TabViewItemHeaderBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource SystemControlBackgroundBaseMediumBrush}" />
            <Setter Property="CornerRadius" Value="{Binding Converter={StaticResource TopCornerRadiusFilterConverter}, Source={ThemeResource OverlayCornerRadius}}" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Margin" Value="0,7,0,0" />
            <Setter Property="Padding" Value="10,10,10,11" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw"
                            Background="{TemplateBinding Background}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="SemiLight">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderBackgroundPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderBackgroundPressed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonForegroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="TabViewItemsPanel1">
            <StackPanel
                Padding="0,0,0,0"
                Orientation="Horizontal"
                Spacing="0" />
        </ItemsPanelTemplate>




    </UserControl.Resources>

    <Grid
        x:Name="Ribbon"
        Grid.Row="0"
        Margin="0,0,0,0"
        Background="{ThemeResource RibbonBackgroundColor}">
        <StackPanel
            x:Name="RibbonPanel"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Orientation="Vertical">
            <Grid Height="Auto" Visibility="Visible">
                <Custom:TabView
                    x:Name="RibbonTabView"
                    x:FieldModifier="public"
                    Background="Transparent"
                    ItemsPanel="{StaticResource TabViewItemsPanel1}"
                    TabWidthBehavior="Actual"
                    Template="{StaticResource TabViewTemplate1}">
                    <Custom:TabView.ItemContainerTransitions>
                        <TransitionCollection />
                    </Custom:TabView.ItemContainerTransitions>
                    <Custom:TabViewItem
                        x:Uid="RibbonAreaFile"
                        Width="Auto"
                        MinWidth="48"
                        MinHeight="32"
                        BorderThickness="0"
                        Header="File"
                        Tapped="TabViewItem_Tapped"
                        Template="{StaticResource TabViewItemFluentTemplate}">
                        <FlyoutBase.AttachedFlyout>
                            <Flyout Closed="MenuFlyout_Closed">
                                <Flyout.Content>
                                    <ListView SelectionChanged="ListView_SelectionChanged" SelectionMode="Single">
                                        <ListViewItem
                                            x:Name="NewWindowButton"
                                            Padding="12,8"
                                            IsTapEnabled="true"
                                            Tapped="NewWindowButton_Click">
                                            <StackPanel Orientation="Horizontal" Spacing="14">
                                                <FontIcon Glyph="&#xE78B;" />
                                                <StackPanel Orientation="Vertical">
                                                    <TextBlock
                                                        x:Uid="RibbonAreaFileOpenNewWindowTitle"
                                                        FontSize="14"
                                                        FontWeight="Medium"
                                                        Text="Open new window" />
                                                    <TextBlock x:Uid="RibbonAreaFileOpenNewWindowDescription" Text="Creates a new instance of Files" />
                                                </StackPanel>
                                            </StackPanel>
                                        </ListViewItem>
                                        <ListViewItem
                                            x:Name="SettingsButton"
                                            Padding="12,8"
                                            IsTapEnabled="true"
                                            Tapped="SettingsButton_Click">
                                            <StackPanel Orientation="Horizontal" Spacing="14">
                                                <FontIcon Glyph="&#xE713;" />
                                                <StackPanel Orientation="Vertical">
                                                    <TextBlock
                                                        x:Uid="RibbonAreaFileSettingsTitle"
                                                        FontSize="14"
                                                        FontWeight="Medium"
                                                        Text="Settings" />
                                                    <TextBlock x:Uid="RibbonAreaFileSettingsDescription" Text="Make changes to app preferences" />
                                                </StackPanel>
                                            </StackPanel>
                                        </ListViewItem>
                                        <ListViewItem
                                            x:Name="ExitButton"
                                            Padding="12,8"
                                            IsTapEnabled="true"
                                            Tapped="ExitButton_Click">
                                            <StackPanel Orientation="Horizontal" Spacing="14">
                                                <FontIcon Glyph="&#xE8BB;" />
                                                <StackPanel Orientation="Vertical">
                                                    <TextBlock
                                                        x:Uid="RibbonAreaFileCloseTitle"
                                                        FontSize="14"
                                                        FontWeight="Medium"
                                                        Text="Close Files" />
                                                    <TextBlock x:Uid="RibbonAreaFileCloseDescription" Text="Closes this window" />
                                                </StackPanel>
                                            </StackPanel>
                                        </ListViewItem>
                                    </ListView>
                                </Flyout.Content>

                            </Flyout>
                        </FlyoutBase.AttachedFlyout>
                    </Custom:TabViewItem>
                    <Custom:TabViewItem
                        x:Name="HomeRibbonItem"
                        x:Uid="RibbonAreaHome"
                        Width="Auto"
                        MinWidth="48"
                        MinHeight="32"
                        BorderThickness="0"
                        DoubleTapped="RibbonItem_DoubleTapped"
                        Header="Home"
                        IsSelected="True"
                        Template="{StaticResource TabViewItemFluentTemplate}">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Tapped">
                                <core:InvokeCommandAction Command="{x:Bind RibbonViewModel.ShowRibbonCommand}" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <Custom:TabViewItem.Resources>
                            <ResourceDictionary Source="ms-appx:///Microsoft.UI.Xaml/DensityStyles/Compact.xaml" />
                        </Custom:TabViewItem.Resources>
                        <controls:RibbonPage Visibility="{x:Bind local:App.AppSettings.ShowRibbonContent, Mode=OneWay}">
                            <controls:RibbonPage.PageContent>

                                <ribbon:RibbonCommandItem
                                    x:Name="CutButton"
                                    x:Uid="RibbonAreaCutButton"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    Icon="Cut"
                                    IsEnabled="{x:Bind RibbonViewModel.HomeItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="Cut"
                                    Tapped="{x:Bind local:App.CurrentInstance.InteractionOperations.CutItem_Click}" />

                                <ribbon:RibbonCommandItem
                                    x:Name="CopyButton"
                                    x:Uid="RibbonAreaCopyButton"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    Icon="Copy"
                                    IsEnabled="{x:Bind RibbonViewModel.HomeItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="Copy"
                                    Tapped="{x:Bind local:App.CurrentInstance.InteractionOperations.CopyItem_ClickAsync}" />

                                <ribbon:RibbonCommandItem
                                    x:Name="PasteButton"
                                    x:Uid="RibbonAreaPasteButton"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    Icon="Paste"
                                    IsEnabled="{x:Bind local:App.PS.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="Paste"
                                    Tapped="{x:Bind local:App.CurrentInstance.InteractionOperations.PasteItem_ClickAsync}" />

                                <ribbon:RibbonCommandItem
                                    x:Name="CopyPathButton"
                                    x:Uid="RibbonAreaCopyPathButton"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    IsEnabled="{x:Bind RibbonViewModel.AlwaysPresentCommands.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="Copy Path"
                                    Tapped="{x:Bind local:App.CurrentInstance.InteractionOperations.GetPath_Click}">
                                    <ribbon:RibbonCommandItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xF271;" />
                                    </ribbon:RibbonCommandItem.Icon>
                                </ribbon:RibbonCommandItem>

                                <ribbon:RibbonDividerItem Visibility="{x:Bind RibbonViewModel.AppBarSeparatorVisibility, Mode=OneWay}" />

                                <ribbon:RibbonCommandItem
                                    x:Name="DeleteButton"
                                    x:Uid="RibbonAreaDeleteButton"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    Icon="Delete"
                                    IsEnabled="{x:Bind RibbonViewModel.HomeItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="Delete"
                                    Tapped="{x:Bind local:App.CurrentInstance.InteractionOperations.DeleteItem_Click}" />

                                <ribbon:RibbonCommandItem
                                    x:Name="RenameButton"
                                    x:Uid="RibbonAreaRenameButton"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    Icon="Rename"
                                    IsEnabled="{x:Bind RibbonViewModel.HomeItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="Rename"
                                    Tapped="{x:Bind local:App.CurrentInstance.InteractionOperations.RenameItem_Click}" />

                                <ribbon:RibbonCommandItem
                                    x:Name="addItemButton"
                                    x:Uid="RibbonAreaAddItemButton"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    Icon="Add"
                                    IsEnabled="{x:Bind RibbonViewModel.AlwaysPresentCommands.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="New"
                                    Tapped="AddItem_Click" />

                                <ribbon:RibbonDividerItem Visibility="{x:Bind RibbonViewModel.AppBarSeparatorVisibility, Mode=OneWay}" />

                                <ribbon:RibbonCommandItem
                                    x:Name="ShowPropertiesButton"
                                    x:Uid="RibbonAreaShowPropertiesButton"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    IsEnabled="{x:Bind RibbonViewModel.HomeItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="Properties"
                                    Tapped="ShowPropertiesButton_Click">
                                    <ribbon:RibbonCommandItem.Icon>
                                        <FontIcon Glyph="&#xE946;" />
                                    </ribbon:RibbonCommandItem.Icon>
                                </ribbon:RibbonCommandItem>

                                <ribbon:RibbonCommandItem
                                    x:Name="OpenWithButton"
                                    x:Uid="RibbonAreaOpenWithButton"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    Icon="OpenWith"
                                    IsEnabled="{x:Bind RibbonViewModel.HomeItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="Open With"
                                    Tapped="{x:Bind local:App.CurrentInstance.InteractionOperations.OpenItem_Click}" />

                                <ribbon:RibbonDividerItem Visibility="{x:Bind RibbonViewModel.AppBarSeparatorVisibility, Mode=OneWay}" />

                                <ribbon:RibbonCommandItem
                                    x:Name="ShowFolderPropertiesButton"
                                    x:Uid="RibbonAreaFolderProperties"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    IsEnabled="{x:Bind RibbonViewModel.AlwaysPresentCommands.isEnabled, Mode=OneWay}"
                                    LabelText="Folder Properties"
                                    Tapped="{x:Bind local:App.CurrentInstance.InteractionOperations.ShowFolderPropertiesButton_Click}">
                                    <ribbon:RibbonCommandItem.Icon>
                                        <FontIcon Glyph="&#xF12B;" />
                                    </ribbon:RibbonCommandItem.Icon>
                                </ribbon:RibbonCommandItem>
                            </controls:RibbonPage.PageContent>

                        </controls:RibbonPage>
                    </Custom:TabViewItem>

                    <Custom:TabViewItem
                        x:Uid="RibbonAreaShare"
                        Width="Auto"
                        MinWidth="48"
                        MinHeight="32"
                        BorderThickness="0"
                        DoubleTapped="RibbonItem_DoubleTapped"
                        Header="Share"
                        IsDoubleTapEnabled="True"
                        Template="{StaticResource TabViewItemFluentTemplate}">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Tapped">
                                <core:InvokeCommandAction Command="{x:Bind RibbonViewModel.ShowRibbonCommand}" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <Custom:TabViewItem.Resources>
                            <ResourceDictionary Source="ms-appx:///Microsoft.UI.Xaml/DensityStyles/Compact.xaml" />
                        </Custom:TabViewItem.Resources>
                        <controls:RibbonPage Visibility="{x:Bind local:App.AppSettings.ShowRibbonContent, Mode=OneWay}">
                            <controls:RibbonPage.PageContent>

                                <ribbon:RibbonCommandItem
                                    x:Name="ShareButton"
                                    x:Uid="RibbonAreaShareButton"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    Icon="Share"
                                    IsEnabled="{x:Bind RibbonViewModel.ShareItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="Share"
                                    Tapped="{x:Bind local:App.CurrentInstance.InteractionOperations.ShareItem_Click}" />

                            </controls:RibbonPage.PageContent>
                        </controls:RibbonPage>
                    </Custom:TabViewItem>

                    <Custom:TabViewItem
                        x:Uid="RibbonAreaView"
                        Width="Auto"
                        MinWidth="48"
                        MinHeight="32"
                        BorderThickness="0"
                        DoubleTapped="RibbonItem_DoubleTapped"
                        Header="View"
                        IsDoubleTapEnabled="True"
                        Template="{StaticResource TabViewItemFluentTemplate}">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Tapped">
                                <core:InvokeCommandAction Command="{x:Bind RibbonViewModel.ShowRibbonCommand}" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <Custom:TabViewItem.Resources>
                            <ResourceDictionary Source="ms-appx:///Microsoft.UI.Xaml/DensityStyles/Compact.xaml" />
                        </Custom:TabViewItem.Resources>
                        <controls:RibbonPage Visibility="{x:Bind local:App.AppSettings.ShowRibbonContent, Mode=OneWay}">
                            <controls:RibbonPage.PageContent>

                                <ribbon:RibbonCommandItem
                                    x:Name="LayoutButton"
                                    x:Uid="RibbonAreaLayoutButton"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    IsEnabled="{x:Bind RibbonViewModel.LayoutItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="Layout Mode"
                                    Tapped="LayoutButton_Click">
                                    <ribbon:RibbonCommandItem.Icon>
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xF0E2;" />
                                    </ribbon:RibbonCommandItem.Icon>
                                </ribbon:RibbonCommandItem>

                                <ribbon:RibbonCommandItem
                                    x:Name="SelectAllButton"
                                    x:Uid="RibbonAreaSelectAllButton"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    Icon="SelectAll"
                                    IsEnabled="{x:Bind RibbonViewModel.LayoutItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="Select All"
                                    Tapped="{x:Bind local:App.CurrentInstance.InteractionOperations.SelectAllItems}" />

                                <ribbon:RibbonCommandItem
                                    x:Name="ClearAllButton"
                                    x:Uid="RibbonAreaClearAllButton"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    Icon="ClearSelection"
                                    IsEnabled="{x:Bind RibbonViewModel.LayoutItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="Clear All"
                                    Tapped="{x:Bind local:App.CurrentInstance.InteractionOperations.ClearAllItems}" />

                                <ribbon:RibbonDividerItem Visibility="{x:Bind RibbonViewModel.AppBarSeparatorVisibility, Mode=OneWay}" />

                                <ribbon:RibbonCommandItem
                                    x:Uid="RibbonAreaSortByButton"
                                    MinWidth="40"
                                    CornerRadius="2"
                                    Icon="Sort"
                                    IsEnabled="{x:Bind RibbonViewModel.LayoutItems.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    LabelText="Sort By">
                                    <FlyoutBase.AttachedFlyout>
                                        <MenuFlyout Placement="BottomEdgeAlignedLeft">
                                            <muxc:RadioMenuFlyoutItem
                                                x:Uid="RibbonAreaSortByName"
                                                GroupName="SortGroup"
                                                IsChecked="{x:Bind local:App.CurrentInstance.ViewModel.IsSortedByName, Mode=TwoWay}"
                                                Text="Name" />
                                            <muxc:RadioMenuFlyoutItem
                                                x:Uid="RibbonAreaSortByDate"
                                                GroupName="SortGroup"
                                                IsChecked="{x:Bind local:App.CurrentInstance.ViewModel.IsSortedByDate, Mode=TwoWay}"
                                                Text="Date Modified" />
                                            <muxc:RadioMenuFlyoutItem
                                                x:Uid="RibbonAreaSortByType"
                                                GroupName="SortGroup"
                                                IsChecked="{x:Bind local:App.CurrentInstance.ViewModel.IsSortedByType, Mode=TwoWay}"
                                                Text="Type" />
                                            <muxc:RadioMenuFlyoutItem
                                                x:Uid="RibbonAreaSortBySize"
                                                GroupName="SortGroup"
                                                IsChecked="{x:Bind local:App.CurrentInstance.ViewModel.IsSortedBySize, Mode=TwoWay}"
                                                Text="Size" />
                                            <MenuFlyoutSeparator />
                                            <muxc:RadioMenuFlyoutItem
                                                x:Uid="RibbonAreaSortByAscending"
                                                GroupName="SortOrderGroup"
                                                IsChecked="{x:Bind local:App.CurrentInstance.ViewModel.IsSortedAscending, Mode=TwoWay}"
                                                Text="Ascending" />
                                            <muxc:RadioMenuFlyoutItem
                                                x:Uid="RibbonAreaSortByDescending"
                                                GroupName="SortOrderGroup"
                                                IsChecked="{x:Bind local:App.CurrentInstance.ViewModel.IsSortedDescending, Mode=TwoWay}"
                                                Text="Descending" />
                                        </MenuFlyout>
                                    </FlyoutBase.AttachedFlyout>
                                </ribbon:RibbonCommandItem>

                            </controls:RibbonPage.PageContent>
                        </controls:RibbonPage>
                    </Custom:TabViewItem>
                    <!--<Custom:TabViewItem
                        x:Name="SearchTools"
                        Width="Auto"
                        MinWidth="48"
                        MinHeight="32"
                        BorderThickness="0"
                        DoubleTapped="RibbonItem_DoubleTapped"
                        Header="Search"
                        IsDoubleTapEnabled="True"
                        Template="{StaticResource TabViewItemFluentTemplate}"
                        Visibility="Collapsed">
                        <Custom:TabViewItem.Resources>
                            <ResourceDictionary Source="ms-appx:///Microsoft.UI.Xaml/DensityStyles/Compact.xaml" />
                        </Custom:TabViewItem.Resources>
                        <Custom:TabViewItem.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#FFD9D7D2" />
                                <GradientStop Offset="1.25" Color="Transparent" />
                            </LinearGradientBrush>
                        </Custom:TabViewItem.Background>
                        <controls:RibbonPage>
                            <controls:RibbonPage.PageContent>
                                <StackPanel Orientation="Vertical" Spacing="2.5">
                                    <StackPanel Orientation="Horizontal" Spacing="5">
                                        <RadioButton Content="Current folder" />
                                        <RadioButton Content="All subfolders" />
                                    </StackPanel>
                                    <TextBlock Text="Search within" TextAlignment="Center" />
                                </StackPanel>
                                <AppBarSeparator Visibility="{x:Bind RibbonViewModel.AppBarSeparatorVisibility, Mode=OneWay}" />
                                <StackPanel Orientation="Vertical" Spacing="2.5">
                                    <StackPanel Orientation="Horizontal" Spacing="5">
                                        <ComboBox
                                            Width="135"
                                            MaxDropDownHeight="250"
                                            PlaceholderText="Date modified">
                                            <ComboBox.Items>
                                                <ComboBoxItem Content="Today" />
                                                <ComboBoxItem Content="Yesterday" />
                                                <ComboBoxItem Content="This week" />
                                                <ComboBoxItem Content="Last week" />
                                                <ComboBoxItem Content="This month" />
                                                <ComboBoxItem Content="Last month" />
                                                <ComboBoxItem Content="This year" />
                                                <ComboBoxItem Content="Last year" />
                                            </ComboBox.Items>
                                        </ComboBox>
                                        <ComboBox
                                            Width="135"
                                            MaxDropDownHeight="250"
                                            PlaceholderText="Type">
                                            <ComboBox.Items>
                                                <ComboBoxItem Content="Document" />
                                                <ComboBoxItem Content="Folder" />
                                                <ComboBoxItem Content="Movie" />
                                                <ComboBoxItem Content="Music" />
                                                <ComboBoxItem Content="Note" />
                                                <ComboBoxItem Content="Picture" />
                                                <ComboBoxItem Content="Video" />
                                                <ComboBoxItem Content="Custom" />
                                            </ComboBox.Items>
                                        </ComboBox>
                                        <ComboBox
                                            Width="135"
                                            MaxDropDownHeight="250"
                                            PlaceholderText="Size">
                                            <ComboBox.Items>
                                                <ComboBoxItem Content="Empty" />
                                                <ComboBoxItem Content="Tiny (0 - 16 KB)" />
                                                <ComboBoxItem Content="Small (16 KB - 1 MB)" />
                                                <ComboBoxItem Content="Medium (1 - 128 MB)" />
                                                <ComboBoxItem Content="Large (128 MB - 1 GB)" />
                                                <ComboBoxItem Content="Huge (1 - 4 GB)" />
                                                <ComboBoxItem Content="Gigantic (&gt;4 GB)" />
                                            </ComboBox.Items>
                                        </ComboBox>
                                    </StackPanel>
                                    <TextBlock Text="Filter" TextAlignment="Center" />
                                </StackPanel>
                                <AppBarSeparator Visibility="{x:Bind RibbonViewModel.AppBarSeparatorVisibility, Mode=OneWay}" />
                                <Button
                                    Width="125"
                                    Background="Transparent"
                                    BorderThickness="1"
                                    Style="{ThemeResource ButtonRevealStyle}">
                                    <Button.Content>
                                        <StackPanel Orientation="Vertical">
                                            <FontIcon Glyph="&#xE8BB;" />
                                            <TextBlock Text="Cancel search" TextWrapping="WrapWholeWords" />
                                        </StackPanel>
                                    </Button.Content>
                                </Button>
                            </controls:RibbonPage.PageContent>
                        </controls:RibbonPage>
                    </Custom:TabViewItem>-->
                </Custom:TabView>

                <Button
                    x:Name="ToggleRibbon"
                    Grid.Column="1"
                    Width="35"
                    Height="25"
                    Margin="0,4,4,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="Transparent"
                    Command="{x:Bind RibbonViewModel.ToggleRibbon}"
                    Content="{x:Bind RibbonViewModel.ToggleRibbonIcon, Mode=OneWay}"
                    CornerRadius="2"
                    FontFamily="Segoe MDL2 Assets"
                    Style="{StaticResource ToolBarButtonStyle}" />
            </Grid>

        </StackPanel>

    </Grid>
</UserControl>
