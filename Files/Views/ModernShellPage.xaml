<Page
    x:Class="Files.Views.ModernShellPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Custom="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Windows10version1903="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 8)"
    xmlns:controls="using:Files.UserControls"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:converters1="using:Files.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local1="using:Files"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:triggers="using:Microsoft.Toolkit.Uwp.UI.Triggers" 
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    KeyboardAcceleratorPlacementMode="Hidden"
    Loaded="Page_Loaded"
    mc:Ignorable="d"
    x:Name="RootPage">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ResourceDictionaries/DefaultGridSplitterStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Light">
                    <SolidColorBrush x:Key="SidebarBorderBrush" Color="Transparent" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <SolidColorBrush x:Key="SidebarBorderBrush" Color="Transparent" />
                </ResourceDictionary>
                <ResourceDictionary x:Key="HighContrast">
                    <SolidColorBrush x:Key="SidebarBorderBrush" Color="{ThemeResource SystemColorWindowTextColor}" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
            <converters:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <Style x:Key="DefaultGridSplitterStyle" TargetType="Custom:GridSplitter">
                <Setter Property="IsTabStop" Value="True" />
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="IsFocusEngagementEnabled" Value="True" />
                <Setter Property="MinWidth" Value="2" />
                <Setter Property="MinHeight" Value="2" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="GripperForeground" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Custom:GridSplitter">
                            <Grid
                                x:Name="RootGrid"
                                Background="Transparent"
                                BorderBrush="{ThemeResource SidebarBorderBrush}"
                                BorderThickness="1,0,0,0">
                                <ContentPresenter
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Content="{TemplateBinding Element}" />
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="GridSplitterStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="Transparent" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="Transparent" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
        </ResourceDictionary>
    </Page.Resources>

    <Page.KeyboardAccelerators>
        <KeyboardAccelerator
            Key="Z"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="Control" />
        <KeyboardAccelerator
            Key="Y"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="Control" />
        <KeyboardAccelerator
            Key="N"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="Control,Shift" />
        <KeyboardAccelerator
            Key="Delete"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="Shift" />
        <KeyboardAccelerator
            Key="C"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="Control" />
        <KeyboardAccelerator
            Key="V"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="Control" />
        <KeyboardAccelerator
            Key="X"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="Control" />
        <KeyboardAccelerator
            Key="A"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="Control" />
        <KeyboardAccelerator
            Key="Delete"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="None" />
        <KeyboardAccelerator
            Key="Space"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="None" />
        <KeyboardAccelerator
            Key="R"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="Control" />
        <KeyboardAccelerator
            Key="L"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="Control" />
        <KeyboardAccelerator
            Key="D"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="Menu" />
        <KeyboardAccelerator
            Key="F2"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="None" />
        <KeyboardAccelerator
            Key="P"
            Invoked="KeyboardAccelerator_Invoked"
            IsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
            Modifiers="Control" />
    </Page.KeyboardAccelerators>
    <Grid x:Name="RootGrid" SizeChanged="RootGrid_SizeChanged">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:IsEqualStateTrigger Value="{x:Bind InstanceViewModel.PreviewPaneEnabled, Mode=OneWay}"  To="False"/>
                        <triggers:IsEqualStateTrigger Value="{x:Bind InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}"  To="False"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="PreviewPaneRow.Height" Value="0"/>
                        <Setter Target="PreviewPaneColumn.Width" Value="0"/>
                        <Setter Target="PreviewPaneGridSplitter.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers >
                        <triggers:IsEqualStateTrigger Value="{x:Bind AppSettings.EnableAdaptivePreviewPane, Mode=OneWay}" To="False"/>
                        <triggers:CompareStateTrigger Value="{x:Bind RootGridWidth, Mode=OneWay}"  To="1000" Comparison="GreaterThan" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="PreviewPane.(Grid.Row)" Value="2"/>
                        <Setter Target="PreviewPane.(Grid.Column)" Value="2"/>

                        <Setter Target="PreviewPaneGridSplitter.(Grid.Row)" Value="2"/>
                        <Setter Target="PreviewPaneGridSplitter.(Grid.Column)" Value="1"/>
                        <Setter Target="PreviewPaneGridSplitter.Width" Value="2"/>

                        <Setter Target="PreviewPaneRow.Height" Value="4"/>
                        <Setter Target="PreviewPane.IsHorizontal" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers >
                        <triggers:CompareStateTrigger Value="{x:Bind RootGridWidth, Mode=OneWay}"  To="1000" Comparison="LessThanOrEqual" />
                        <!--<AdaptiveTrigger MinWindowWidth="0"/>-->
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="PreviewPane.(Grid.Row)" Value="4"/>
                        <Setter Target="PreviewPane.(Grid.Column)" Value="0"/>

                        <Setter Target="PreviewPaneGridSplitter.(Grid.Row)" Value="3"/>
                        <Setter Target="PreviewPaneGridSplitter.(Grid.Column)" Value="0"/>
                        <Setter Target="PreviewPaneGridSplitter.Height" Value="2"/>

                        <Setter Target="PreviewPaneColumn.Width" Value="0"/>
                        <Setter Target="PreviewPane.IsHorizontal" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition
                x:Name="SidebarColumn"
                Width="{x:Bind SidebarWidth, Mode=TwoWay}"
                MinWidth="200"
                MaxWidth="500" />
            <ColumnDefinition Width="*" MinWidth="300" />
        </Grid.ColumnDefinitions>

        <Interactivity:Interaction.Behaviors>
            <Core:DataTriggerBehavior Binding="{x:Bind IsPageMainPane}" Value="False">
                <Core:ChangePropertyAction
                    PropertyName="MinWidth"
                    TargetObject="{Binding ElementName=SidebarColumn}"
                    Value="0" />
                <Core:ChangePropertyAction
                    PropertyName="Width"
                    TargetObject="{Binding ElementName=SidebarColumn}"
                    Value="0" />
                <Core:ChangePropertyAction
                    PropertyName="ShadowOpacity"
                    TargetObject="{Binding ElementName=DropShadowPanel}"
                    Value="0" />
            </Core:DataTriggerBehavior>
        </Interactivity:Interaction.Behaviors>

        <controls:SidebarControl
            x:Name="SidebarControl"
            x:Load="{x:Bind IsPageMainPane}"
            CanOpenInNewPane="{x:Bind IsMultiPaneEnabled, Mode=OneWay}"
            EmptyRecycleBinCommand="{x:Bind InteractionOperations.EmptyRecycleBin, Mode=OneWay}"
            Loaded="SidebarControl_Loaded" />

        <Custom:DropShadowPanel
            x:Name="DropShadowPanel"
            Grid.Column="1"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            BlurRadius="4"
            BorderBrush="{x:Bind CurrentInstanceBorderBrush, Mode=OneWay}"
            BorderThickness="0,0,0,2"
            Canvas.ZIndex="100"
            OffsetX="-2"
            ShadowOpacity=".04">
            <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="2*" x:Name="PreviewPaneRow" MaxHeight="400"/>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="2*" x:Name="PreviewPaneColumn" MaxWidth="600"/>
                </Grid.ColumnDefinitions>

                <Grid
                    x:Name="SmallWindowTitlebar"
                    Height="30"
                    x:Load="{x:Bind converters1:MultiBooleanConverter.OrConvert(AppSettings.IsVerticalTabFlyoutEnabled, local1:App.InteractionViewModel.IsVerticalTabFlyoutVisible), Mode=OneWay}"
                    Background="Transparent"
                    Loaded="SmallWindowTitlebar_Loaded" />

                <controls:NavigationToolbar
                    x:Name="NavToolbar"
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="10"
                    x:FieldModifier="public"
                    AreKeyboardAcceleratorsEnabled="{x:Bind IsCurrentInstance, Mode=OneWay}"
                    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                    CanCreateFileInPage="{x:Bind InstanceViewModel.CanCreateFileInPage, Mode=OneWay}"
                    CanOpenTerminalInPage="{x:Bind InstanceViewModel.CanOpenTerminalInPage, Mode=OneWay}"
                    CanPasteInPage="{x:Bind InstanceViewModel.CanPasteInPage, Mode=OneWay}"
                    CanCopyPathInPage="{x:Bind InstanceViewModel.CanCopyPathInPage, Mode=OneWay}"
                    CopyPathInvokedCommand="{x:Bind InteractionOperations.CopyPathOfWorkingDirectory, Mode=OneWay}"
                    IsCreateButtonEnabledInPage="{x:Bind InstanceViewModel.IsCreateButtonEnabledInPage, Mode=OneWay}"
                    IsMultiPaneActive="{x:Bind IsMultiPaneActive, Mode=OneWay}"
                    IsPageMainPane="{x:Bind IsPageMainPane, Mode=OneWay}"
                    IsPageTypeNotHome="{x:Bind InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}"
                    NewFileInvokedCommand="{x:Bind InteractionOperations.CreateNewFile, Mode=OneWay}"
                    NewFolderInvokedCommand="{x:Bind InteractionOperations.CreateNewFolder, Mode=OneWay}"
                    NewPaneInvokedCommand="{x:Bind InteractionOperations.OpenNewPane, Mode=OneWay}"
                    NewTabInvokedCommand="{x:Bind InteractionOperations.AddNewTabToMultitaskingControl, Mode=OneWay}"
                    NewWindowInvokedCommand="{x:Bind InteractionOperations.OpenNewWindow, Mode=OneWay}"
                    OpenInTerminalInvokedCommand="{x:Bind InteractionOperations.OpenDirectoryInDefaultTerminal, Mode=OneWay}"
                    PasteInvokedCommand="{x:Bind InteractionOperations.PasteItemsFromClipboard, Mode=OneWay}"
                    ShowMultiPaneControls="{x:Bind converters1:MultiBooleanConverter.AndConvert(IsMultiPaneEnabled, IsPageMainPane), Mode=OneWay}" 
                    PreviewPaneEnabled="{x:Bind InstanceViewModel.PreviewPaneEnabled, Mode=TwoWay}"
                    Grid.ColumnSpan="3"/>

                <Frame
                    x:Name="ItemDisplayFrame"
                    Grid.Row="2"
                    x:FieldModifier="public"
                    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                    Navigated="ItemDisplayFrame_Navigated" />

                <Custom:GridSplitter
                    Grid.Column="1" Grid.Row="1"
                    Style="{StaticResource PaneGridSplitter}"
                    ResizeBehavior="BasedOnAlignment"
                    x:Name="PreviewPaneGridSplitter" x:Load="{x:Bind InstanceViewModel.PreviewPaneEnabled, Mode=OneWay}">
                </Custom:GridSplitter>

                <controls:PreviewPane Grid.Row="1" Grid.Column="2" x:Name="PreviewPane" 
                                    SelectedItems="{x:Bind ContentPage.SelectedItems, Mode=OneWay}"
                                    x:Load="{x:Bind InstanceViewModel.PreviewPaneEnabled, Mode=OneWay}" >
                </controls:PreviewPane>

                <controls:StatusBarControl
                    x:Name="StatusBarControl"
                    Grid.Row="5"
                    x:Load="{x:Bind InstanceViewModel.IsPageTypeNotHome, Mode=OneWay}"
                    ClearSelectionInvokedCommand="{x:Bind InteractionOperations.ClearContentPageSelection, Mode=OneWay}"
                    DirectoryPropertiesViewModel="{x:Bind ContentPage.DirectoryPropertiesViewModel, Mode=OneWay}"
                    FolderSettings="{x:Bind InstanceViewModel.FolderSettings, Mode=OneWay}"
                    InvertSelectionInvokedCommand="{x:Bind InteractionOperations.InvertContentPageSelction, Mode=OneWay}"
                    SelectAllInvokedCommand="{x:Bind InteractionOperations.SelectAllContentPageItems, Mode=OneWay}"
                    SelectedItemsPropertiesViewModel="{x:Bind ContentPage.SelectedItemsPropertiesViewModel, Mode=OneWay}"
                    ShowStatusCenter="{x:Bind IsPageSecondaryPane, Mode=OneWay}" 
                    Grid.ColumnSpan="3">
                </controls:StatusBarControl>
            </Grid>
        </Custom:DropShadowPanel>

        <Custom:GridSplitter
            x:Name="SidebarResizer"
            Grid.Column="1"
            Width="5"
            MinWidth="5"
            HorizontalAlignment="Left"
            x:Load="{x:Bind IsPageMainPane}"
            Background="Transparent"
            Canvas.ZIndex="150"
            CursorBehavior="ChangeOnSplitterHover"
            Foreground="Transparent"
            GripperCursor="Default"
            GripperForeground="Transparent"
            IsTabStop="False"
            ResizeBehavior="BasedOnAlignment"
            ResizeDirection="Auto"
            Style="{StaticResource DefaultGridSplitterStyle}">
            <Custom:GridSplitter.RenderTransform>
                <TranslateTransform X="0" />
            </Custom:GridSplitter.RenderTransform>
        </Custom:GridSplitter>
    </Grid>
</Page>